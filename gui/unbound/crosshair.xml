
<ui>
	<css name="$TextHUD">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="18"/>
		<selectable value="false"/>
		<textColor value="0xFFF1F1F1"/>
	</css>
	<css name="$TextHUDBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="18"/>
		<selectable value="false"/>
		<textColor value="0xFFF1F1F1"/>
	</css>
	<css name="$TextHUD24Bold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="24"/>
		<selectable value="false"/>
		<textColor value="0xFFF1F1F1"/>
	</css>
	<css name="$TextHUD22Bold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="22"/>
		<selectable value="false"/>
		<textColor value="0xFFF1F1F1"/>
	</css>
	<css name="$TextHUD16Bold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="16"/>
		<selectable value="false"/>
		<textColor value="0xFFF1F1F1"/>
	</css>
	<css name="$TextHUD16">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="16"/>
		<selectable value="false"/>
		<textColor value="0xFFF1F1F1"/>
	</css>
	<css name="$TextColorHUDAlly">
		<textColor value="0xFF80c0ff"/>
	</css>
	<css name="$TextColorHUDDivision">
		<textColor value="0xFFFFCC66"/>
	</css>
	<css name="$TextColorHUDTK">
		<textColor value="0xFFFF96CA"/>
	</css>
	<css name="$TextColorHUDAllyInvert">
		<textColor value="0xFF001b33"/>
	</css>
	<css name="$TextColorHUDEnemy">
		<textColor value="0xFFe75153"/>
	</css>
	<css name="$TextColorHUDEnemyInvert">
		<textColor value="0xFF330012"/>
	</css>
	<css name="$TextColorHUDNeutral">
		<textColor value="0xFFF1F1F1"/>
	</css>
	<css name="$TextColorHUDPositive">
		<textColor value="0xFF4CE8AA"/>
	</css>
	<css name="$TextColorHUDWarning">
		<textColor value="0xFFFF9933"/>
	</css>
	<css name="$TextColorHUDCritical">
		<textColor value="0xFFe75153"/>
	</css>
	<css name="$TextColorHUDDead">
		<textColor value="0xFF111111"/>
	</css>
	<css name="$TextColorHUDDark">
		<textColor value="0xFF000000"/>
	</css>
	<css name="$CapsTracking">
		<letterSpacing value="1.4"/>
	</css>
	<css name="$HUDFullsize">
		<width value="100%"/>
		<height value="100%"/>
	</css>
	<css name="$HUDFullsizeAbsolute">
		<width value="100%"/>
		<position value="absolute"/>
		<height value="100%"/>
	</css>
	<css name="$HUDMiddleAligned">
		<marginLeft value="-50%"/>
		<left value="50%"/>
	</css>
	<css name="$ZeroSize">
		<width value="0px"/>
		<height value="0px"/>
	</css>
	<block className="TraceTooltip">
		<block>
			<style>
				<maxHeight value="500"/>
				<overflow value="scroll"/>
				<backgroundColor value="0x80000000"/>
			</style>
			<styleClass value="$DefaultScrollBar"/>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<style>
					<textColor value="0xffffffff"/>
					<maxWidth value="600"/>
					<marginBottom value="3px"/>
				</style>
				<bind name="text" value="'_trace: ' + (_trace)"/>
			</block>
		</block>
	</block>
	<block className="CrosshairContainer">
		<styleClass value="$HUDFullsize"/>
		<bind name="stageSize"/>
		<bind name="scaleX" value="uiScale"/>
		<bind name="scaleY" value="uiScale"/>
		<bind name="ubScaleX" value="1/uiScale"/>
		<bind name="ubScaleY" value="1/uiScale"/>
		<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
		<bind name="firstEntityDH" value="'avatar'; CC.playerAvatar"/>
		<bind name="watchDH" value="'isAlive'; ['avatar.health.evKilled']; avatar.health.isAlive"/>
		<bind name="watchDH" value="'isAviaCameraModeOn'; ['cameraEntity.camera.evModeChanged']; cameraEntity.camera.mode == 1"/>
		<bind name="watchDH" value="'isTacticalModeOn'; ['cameraEntity.camera.evModeChanged']; cameraEntity.camera.isTactical"/>
		<bind name="instance" value="'MainCrosshair'; isAlive &amp;&amp; !isAviaCameraModeOn ? {_uiScale: uiScale, _stageHeight: stageHeight} : null"/>
		<bind name="instance" value="'DotCrosshair'; {_stageWidth: stageWidth, _stageHeight: stageHeight, _uiScale: uiScale}"/>
		<bind name="instance" value="'AviaCameraCrosshair'; isAlive &amp;&amp; isAviaCameraModeOn ? {_uiScale: uiScale, _stageHeight: stageHeight} : null"/>
		<bind name="transition" value="isTacticalModeOn; 0.15; {alpha:1}; {alpha: 0}"/>
		<bind name="mouseEnabled" value="false"/>
		<bind name="mouseChildren" value="false"/>
	</block>
	<block className="MainCrosshair">
		<style>
			<position value="absolute"/>
		</style>
		<bind name="firstEntityDH" value="'prefs'; CC.prefsMarker"/>
		<bind name="firstEntityDH" value="'cross'; CC.crosshair"/>
		<bind name="perFrameUpdate" value="{x : cross.crosshair.posX/_uiScale, y: cross.crosshair.posY/_uiScale, alpha: ((cross.crosshair.posY &lt; _stageHeight/4) || (cross.crosshair.posY &gt; _stageHeight*3/4) ? 0.3 : 1)}"/>
		<bind name="collectionRepeatDH" value="CC.weapon; 'CrosshairTypeConatiner'; ''; {_uiScale: _uiScale}"/>
	</block>
	<block className="DotCrosshair">
		<bind name="firstEntityDH" value="'timerEntity'; CC.timer"/>
		<bind name="firstEntityDH" value="'cross'; CC.crosshair"/>
		<bind name="watchDH" value="'isInCenterY'; ['timerEntity.timer.evFrequent']; cross.crosshair.isInCenterY"/>
		<bind name="watchDH" value="'isInCenterX'; ['timerEntity.timer.evFrequent']; cross.crosshair.isInCenterX"/>
		<bind name="fade" value="!isInCenterY || !isInCenterX; 0.3; {alpha:0}; {alpha:1}"/>
		<bind name="x" value="_stageWidth/_uiScale/2 - 1"/>
		<bind name="y" value="_stageHeight/_uiScale/2 - 1"/>
		<style>
			<position value="absolute"/>
			<width value="2px"/>
			<height value="2px"/>
			<backgroundColor value="0xFFF1F1F1"/>
		</style>
	</block>
	<block className="CrosshairTypeConatiner">
		<bind name="dataRefDH" value="'entity'; '$dataRef.ref'"/>
		<bind name="firstEntityDH" value="'cross'; CC.crosshair"/>
		<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
		<bind name="firstEntityDH" value="'timerEntity'; CC.timer"/>
		<bind name="watchDH" value="'isObserveMode'; ['cameraEntity.camera.evObservingChanged']; cameraEntity.camera.observing"/>
		<bind name="watchDH" value="'altVision'; ['cameraEntity.camera.evAltVisionChanged']; cameraEntity.camera.altVision"/>
		<bind name="watchDH" value="'isBinocular'; ['cross.crosshair.evIsBinocularChanged']; cross.crosshair.isBinocular"/>
		<bind name="watchDH" value="'distance'; ['timerEntity.timer.evFrequent']; cross.aimAssist.distance"/>
		<bind name="watchDH" value="'collisionTime'; ['timerEntity.timer.evFrequent']; cross.aimAssist.collisionTime"/>
		<bind name="watchDH" value="'terrainAimValue'; ['cross.terrainAim.evChanged']; cross.terrainAim.value"/>
		<bind name="watchDH" value="'angleLock'; ['cross.aimLock.evAngleLockChanged']; cross.aimLock.angleLock"/>
		<bind name="watchDH" value="'sectorLock'; ['cross.aimLock.evSectorLockChanged']; cross.aimLock.sectorLock"/>
		<bind name="watchDH" value="'weaponType'; []; entity.weapon.type"/>
		<bind name="watchDH" value="'isOutOfDist'; ['entity.weapon.evIsOutOfDistChanged']; entity.weapon.isOutOfDist"/>
		<bind name="watchDH" value="'weaponIsSelected'; ['entity.selection.evChanged']; entity.selection.value"/>
		<bind name="watch" value="'showDistanceTime'; isBinocular"/>
		<bind name="visible" value="weaponIsSelected"/>
		<bind name="firstEntityDH" value="'battleDataEntity'; CC.battleData"/>
		<bind name="watchDH" value="'battleState'; ['battleDataEntity.battleState.evBattleStateChanged']; battleDataEntity.battleState.battleState"/>
		<bind name="transition" value="battleState &lt; 1; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2; 0.5"/>
		<bind name="childParentScope" value="weaponType; {}; 'ArtilleryCross'; null; 'TorpedoCross'"/>
		<block className="Distance">
			<bind name="fade" value="showDistanceTime; showDistanceTime ? 0.15 : 0.05; {alpha: 0, scaleX: 0.5, scaleY: 0.5}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 0.5, scaleY: 0.5}; 2"/>
			<bind name="var" value="{ distancePostfix: tr('IDS_KILOMETER')}"/>
			<style>
				<position value="absolute"/>
				<flow value="horizontal"/>
			</style>
			<bind name="x" value="110"/>
			<bind name="y" value="30"/>
			<bind name="style" value="'alpha'; isOutOfDist ? 0.5 : 1"/>
			<block>
				<style>
					<width value="14px"/>
					<height value="14px"/>
					<top value="6px"/>
					<marginRight value="3px"/>
				</style>
				<block className="icon_distance_v" type="native">
					<bind name="fade" value="!terrainAimValue; 0.15; {alpha: 0, y: 10}; {alpha: 1, y: 0}; {alpha: 0, y: -10}; 1"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="icon_terrain_v" type="native">
					<bind name="fade" value="terrainAimValue; 0.15; {alpha: 0, y: 10}; {alpha: 1, y: 0}; {alpha: 0, y: -10}; 1"/>
					<style>
						<position value="absolute"/>
						<left value="-6px"/>
					</style>
				</block>
			</block>
			<block type="text">
				<styleClass value="$TextHUDBold"/>
				<bind name="text" value="(isOutOfDist ? '--.--' : distance) + ' ' + distancePostfix"/>
			</block>
		</block>
		<block className="CollisionTime">
			<bind name="fade" value="showDistanceTime; showDistanceTime ? 0.15 : 0.05; {alpha: 0, scaleX: 0.5, scaleY: 0.5}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 0.5, scaleY: 0.5}; 2"/>
			<bind name="var" value="{ timePostfix: tr('IDS_SECOND')}"/>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="x" value="-110"/>
			<bind name="y" value="30"/>
			<block>
				<style>
					<position value="absolute"/>
					<right value="0px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHUDBold"/>
					<style>
						<marginRight value="3px"/>
					</style>
					<bind name="text" value="collisionTime + ' ' + timePostfix"/>
				</block>
				<block className="icon_approach_time_v" type="native">
					<style>
						<top value="6px"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block className="GunPositionLocks">
			<bind name="fade" value="isObserveMode || angleLock || sectorLock; 0.15; {alpha: 0, y: 10}; {alpha:1, y: -20}; {alpha: 0, y: 10}; 2"/>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="x" value="10"/>
			<bind name="y" value="-20"/>
			<block type="text">
				<styleClass value="$TextHUD16Bold"/>
				<bind name="text" value="isObserveMode 	? 'IDS_LOCKED' :
						angleLock 	? 'IDS_GUN_LOCK_INDICATOR_RELATIVE' :
						sectorLock 	? 'IDS_GUN_LOCK_INDICATOR_ABSOLUTE'
									: ''"/>
			</block>
		</block>
	</block>
	<block className="AviaCameraCrosshair">
		<style>
			<top value="50%"/>
			<left value="50%"/>
		</style>
		<block className="lesta.display.Sector" type="native">
			<style>
				<position value="absolute"/>
				<alpha value="0.5"/>
			</style>
			<bind name="color" value="0xFFF1F1F1"/>
			<bind name="arc" value="360"/>
			<bind name="offset" value="0"/>
			<bind name="radius" value="32"/>
			<bind name="innerRadius" value="30"/>
		</block>
	</block>
	<block className="Distance">
		<bind name="fade" value="showDistanceTime; showDistanceTime ? 0.15 : 0.05; {alpha: 0, scaleX: 0.5, scaleY: 0.5}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 0.5, scaleY: 0.5}; 2"/>
		<bind name="var" value="{ distancePostfix: tr('IDS_KILOMETER')}"/>
		<style>
			<position value="absolute"/>
			<flow value="horizontal"/>
		</style>
		<bind name="x" value="110"/>
		<bind name="y" value="30"/>
		<bind name="style" value="'alpha'; isOutOfDist ? 0.5 : 1"/>
		<block>
			<style>
				<width value="14px"/>
				<height value="14px"/>
				<top value="6px"/>
				<marginRight value="3px"/>
			</style>
			<block className="icon_distance_v" type="native">
				<bind name="fade" value="!terrainAimValue; 0.15; {alpha: 0, y: 10}; {alpha: 1, y: 0}; {alpha: 0, y: -10}; 1"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="icon_terrain_v" type="native">
				<bind name="fade" value="terrainAimValue; 0.15; {alpha: 0, y: 10}; {alpha: 1, y: 0}; {alpha: 0, y: -10}; 1"/>
				<style>
					<position value="absolute"/>
					<left value="-6px"/>
				</style>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextHUDBold"/>
			<bind name="text" value="(isOutOfDist ? '--.--' : distance) + ' ' + distancePostfix"/>
		</block>
	</block>
	<block className="CollisionTime">
		<bind name="fade" value="showDistanceTime; showDistanceTime ? 0.15 : 0.05; {alpha: 0, scaleX: 0.5, scaleY: 0.5}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 0.5, scaleY: 0.5}; 2"/>
		<bind name="var" value="{ timePostfix: tr('IDS_SECOND')}"/>
		<style>
			<position value="absolute"/>
		</style>
		<bind name="x" value="-110"/>
		<bind name="y" value="30"/>
		<block>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHUDBold"/>
				<style>
					<marginRight value="3px"/>
				</style>
				<bind name="text" value="collisionTime + ' ' + timePostfix"/>
			</block>
			<block className="icon_approach_time_v" type="native">
				<style>
					<top value="6px"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="GunPositionLocks">
		<bind name="fade" value="isObserveMode || angleLock || sectorLock; 0.15; {alpha: 0, y: 10}; {alpha:1, y: -20}; {alpha: 0, y: 10}; 2"/>
		<style>
			<position value="absolute"/>
		</style>
		<bind name="x" value="10"/>
		<bind name="y" value="-20"/>
		<block type="text">
			<styleClass value="$TextHUD16Bold"/>
			<bind name="text" value="isObserveMode 	? 'IDS_LOCKED' :
						angleLock 	? 'IDS_GUN_LOCK_INDICATOR_RELATIVE' :
						sectorLock 	? 'IDS_GUN_LOCK_INDICATOR_ABSOLUTE'
									: ''"/>
		</block>
	</block>
	<block className="ArtilleryCross">
		<style>
			<position value="absolute"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="repeat" value="entity.weapon.guns; 'GunItem'"/>
		</block>
		<block className="DistanceLadder">
			<style>
				<position value="absolute"/>
			</style>
			<bind name="visible" value="!isObserveMode"/>
			<bind name="var" value="{ barsNumber: 5 }"/>
			<block>
				<style>
					<position value="absolute"/>
					<height value="1px"/>
				</style>
				<bind name="perFrameUpdate" value="{y : (cross.shootRange.vertLineY - cross.shootRange.vertLineLength)/_uiScale}"/>
				<bind name="repeat" value="barsNumber; 'DistanceLadderBar'; {_barsNumber: barsNumber, _uiScale: _uiScale }"/>
			</block>
		</block>
		<block className="Binocular">
			<bind name="fade" value="isBinocular; isBinocular ? 0.15 : 0.05; {alpha: 0, scaleX: 0.5}; {alpha: 1, scaleX: 1}; {alpha: 0, scaleX: 0.5}; 2"/>
			<style>
				<position value="absolute"/>
			</style>
			<block className="crosshair_binocular_scale_static_thin_v" type="native"/>
		</block>
		<block className="AimedGunItem">
			<style>
				<position value="absolute"/>
			</style>
			<bind name="watchDH" value="'aimed'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed"/>
			<bind name="watchDH" value="'reloadPercent'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed ? entity.weaponReady.reloadPercent : 1"/>
			<bind name="watchDH" value="'isReadyShoot'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed &amp;&amp; entity.weaponReady.reloadPercent &gt;= 1"/>
			<bind name="handleEventDH" value="'entity.weapon.evShoot'; 'evShoot'; {}; 2"/>
			<bind name="fade" value="aimed; 0.1; {alpha: 0, scaleY: 0}; {alpha:1, scaleY: 1}"/>
			<bind name="y" value="4"/>
			<block className="lesta.display.Sector" type="native">
				<style>
					<position value="absolute"/>
					<alpha value="0.3"/>
					<width value="0px"/>
					<height value="0px"/>
				</style>
				<bind name="visible" value="reloadPercent &lt; 1"/>
				<bind name="color" value="0xFF000000"/>
				<bind name="arc" value="90"/>
				<bind name="offset" value="45"/>
				<bind name="radius" value="12"/>
				<bind name="innerRadius" value="0"/>
			</block>
			<block className="lesta.display.Sector" type="native">
				<style>
					<position value="absolute"/>
					<width value="0px"/>
					<height value="0px"/>
				</style>
				<bind name="alpha" value="reloadPercent &lt; 1 ? 1 : 0.5"/>
				<bind name="color" value="reloadPercent &lt; 1 ? 0xFFFF9933 : 0xFFF1F1F1"/>
				<bind name="arc" value="90 * reloadPercent"/>
				<bind name="offset" value="45"/>
				<bind name="radius" value="12"/>
				<bind name="innerRadius" value="0"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="changeDispatch" value="reloadPercent == 1; 'evReloaded'; {}; 1; true"/>
				<block className="GunItemShootFX">
					<style>
						<position value="absolute"/>
						<alpha value="0"/>
					</style>
					<bind name="appear" value="'evShoot'; 0.3; 0; {alpha: 1, scaleX: 0, scaleY: 0}; {alpha: 0, scaleX: 3, scaleY: 3}; 2"/>
					<bind name="appear" value="'evReloaded'; 0.5; 0; {alpha: 0.5, scaleX: 0, scaleY: 0}; {alpha: 0, scaleX: 5, scaleY: 5}; 1"/>
					<block className="lesta.display.Sector" type="native">
						<bind name="color" value="reloadPercent &lt; 1 ? 0xFFFF9933 : 0xFFF1F1F1"/>
						<bind name="arc" value="90"/>
						<bind name="offset" value="45"/>
						<bind name="radius" value="12"/>
						<bind name="innerRadius" value="0"/>
					</block>
				</block>
			</block>
		</block>
		<block className="CentralSight">
			<style>
				<position value="absolute"/>
			</style>
			<block className="crosshair_central_sight_thin_v" type="native"/>
		</block>
	</block>
	<block className="CentralSight">
		<style>
			<position value="absolute"/>
		</style>
		<block className="crosshair_central_sight_thin_v" type="native"/>
	</block>
	<block className="Binocular">
		<bind name="fade" value="isBinocular; isBinocular ? 0.15 : 0.05; {alpha: 0, scaleX: 0.5}; {alpha: 1, scaleX: 1}; {alpha: 0, scaleX: 0.5}; 2"/>
		<style>
			<position value="absolute"/>
		</style>
		<block className="crosshair_binocular_scale_static_thin_v" type="native"/>
	</block>
	<block className="ScatterGate">
		<style>
			<position value="absolute"/>
		</style>
		<bind name="fade" value="!isObserveMode &amp;&amp; !isBinocular; isBinocular ? 0.15 : 0.05; {alpha: 0, scaleX: 2}; {alpha: 1, scaleX: 1}; {alpha: 0, scaleX: 2}; 2"/>
		<block>
			<style>
				<position value="absolute"/>
				<backgroundColor value="0xFFF1F1F1"/>
				<width value="2px"/>
				<height value="10px"/>
				<top value="-10px"/>
				<alpha value="0.75"/>
			</style>
			<bind name="perFrameUpdate" value="{x : -cross.shootRange.horLineLength/2}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<backgroundColor value="0xFFF1F1F1"/>
				<width value="2px"/>
				<height value="10px"/>
				<top value="-10px"/>
				<alpha value="0.75"/>
			</style>
			<bind name="perFrameUpdate" value="{x : cross.shootRange.horLineLength/2 - 2}"/>
		</block>
	</block>
	<block className="DistanceLadder">
		<style>
			<position value="absolute"/>
		</style>
		<bind name="visible" value="!isObserveMode"/>
		<bind name="var" value="{ barsNumber: 5 }"/>
		<block>
			<style>
				<position value="absolute"/>
				<height value="1px"/>
			</style>
			<bind name="perFrameUpdate" value="{y : (cross.shootRange.vertLineY - cross.shootRange.vertLineLength)/_uiScale}"/>
			<bind name="repeat" value="barsNumber; 'DistanceLadderBar'; {_barsNumber: barsNumber, _uiScale: _uiScale }"/>
		</block>
	</block>
	<block className="DistanceLadderBar">
		<style>
			<position value="absolute"/>
			<backgroundColor value="0xFFF1F1F1"/>
			<width value="4px"/>
			<height value="2px"/>
		</style>
		<bind name="watch" value="'barWidth'; 4 + math.pow($index,2)*2"/>
		<bind name="width" value="barWidth"/>
		<bind name="x" value="-barWidth/2"/>
		<bind name="alpha" value="0.25 + 0.25 * ($index / _barsNumber)"/>
		<bind name="firstEntityDH" value="'cross'; CC.crosshair"/>
		<bind name="perFrameUpdate" value="{y : -2 +  math.pow(($index/(_barsNumber-1)), 2) * (cross.shootRange.vertLineLength/_uiScale)}"/>
	</block>
	<block className="TorpedoCross">
		<style>
			<position value="absolute"/>
		</style>
		<bind name="repeat" value="entity.weapon.guns; 'GunItem'"/>
		<block className="AimedGunItem">
			<style>
				<position value="absolute"/>
			</style>
			<bind name="watchDH" value="'aimed'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed"/>
			<bind name="watchDH" value="'reloadPercent'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed ? entity.weaponReady.reloadPercent : 1"/>
			<bind name="watchDH" value="'isReadyShoot'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed &amp;&amp; entity.weaponReady.reloadPercent &gt;= 1"/>
			<bind name="handleEventDH" value="'entity.weapon.evShoot'; 'evShoot'; {}; 2"/>
			<bind name="fade" value="aimed; 0.1; {alpha: 0, scaleY: 0}; {alpha:1, scaleY: 1}"/>
			<bind name="y" value="4"/>
			<block className="lesta.display.Sector" type="native">
				<style>
					<position value="absolute"/>
					<alpha value="0.3"/>
					<width value="0px"/>
					<height value="0px"/>
				</style>
				<bind name="visible" value="reloadPercent &lt; 1"/>
				<bind name="color" value="0xFF000000"/>
				<bind name="arc" value="90"/>
				<bind name="offset" value="45"/>
				<bind name="radius" value="12"/>
				<bind name="innerRadius" value="0"/>
			</block>
			<block className="lesta.display.Sector" type="native">
				<style>
					<position value="absolute"/>
					<width value="0px"/>
					<height value="0px"/>
				</style>
				<bind name="alpha" value="reloadPercent &lt; 1 ? 1 : 0.5"/>
				<bind name="color" value="reloadPercent &lt; 1 ? 0xFFFF9933 : 0xFFF1F1F1"/>
				<bind name="arc" value="90 * reloadPercent"/>
				<bind name="offset" value="45"/>
				<bind name="radius" value="12"/>
				<bind name="innerRadius" value="0"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="changeDispatch" value="reloadPercent == 1; 'evReloaded'; {}; 1; true"/>
				<block className="GunItemShootFX">
					<style>
						<position value="absolute"/>
						<alpha value="0"/>
					</style>
					<bind name="appear" value="'evShoot'; 0.3; 0; {alpha: 1, scaleX: 0, scaleY: 0}; {alpha: 0, scaleX: 3, scaleY: 3}; 2"/>
					<bind name="appear" value="'evReloaded'; 0.5; 0; {alpha: 0.5, scaleX: 0, scaleY: 0}; {alpha: 0, scaleX: 5, scaleY: 5}; 1"/>
					<block className="lesta.display.Sector" type="native">
						<bind name="color" value="reloadPercent &lt; 1 ? 0xFFFF9933 : 0xFFF1F1F1"/>
						<bind name="arc" value="90"/>
						<bind name="offset" value="45"/>
						<bind name="radius" value="12"/>
						<bind name="innerRadius" value="0"/>
					</block>
				</block>
			</block>
		</block>
		<block className="CentralSight">
			<style>
				<position value="absolute"/>
			</style>
			<block className="crosshair_central_sight_thin_v" type="native"/>
		</block>
	</block>
	<block className="GunItemShootFX">
		<style>
			<position value="absolute"/>
			<alpha value="0"/>
		</style>
		<bind name="appear" value="'evShoot'; 0.3; 0; {alpha: 1, scaleX: 0, scaleY: 0}; {alpha: 0, scaleX: 3, scaleY: 3}; 2"/>
		<bind name="appear" value="'evReloaded'; 0.5; 0; {alpha: 0.5, scaleX: 0, scaleY: 0}; {alpha: 0, scaleX: 5, scaleY: 5}; 1"/>
		<block className="lesta.display.Sector" type="native">
			<bind name="color" value="reloadPercent &lt; 1 ? 0xFFFF9933 : 0xFFF1F1F1"/>
			<bind name="arc" value="90"/>
			<bind name="offset" value="45"/>
			<bind name="radius" value="12"/>
			<bind name="innerRadius" value="0"/>
		</block>
	</block>
	<block className="AimedGunItem">
		<style>
			<position value="absolute"/>
		</style>
		<bind name="watchDH" value="'aimed'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed"/>
		<bind name="watchDH" value="'reloadPercent'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed ? entity.weaponReady.reloadPercent : 1"/>
		<bind name="watchDH" value="'isReadyShoot'; ['entity.weaponReady.evChanged']; entity.weaponReady.aimed &amp;&amp; entity.weaponReady.reloadPercent &gt;= 1"/>
		<bind name="handleEventDH" value="'entity.weapon.evShoot'; 'evShoot'; {}; 2"/>
		<bind name="fade" value="aimed; 0.1; {alpha: 0, scaleY: 0}; {alpha:1, scaleY: 1}"/>
		<bind name="y" value="4"/>
		<block className="lesta.display.Sector" type="native">
			<style>
				<position value="absolute"/>
				<alpha value="0.3"/>
				<width value="0px"/>
				<height value="0px"/>
			</style>
			<bind name="visible" value="reloadPercent &lt; 1"/>
			<bind name="color" value="0xFF000000"/>
			<bind name="arc" value="90"/>
			<bind name="offset" value="45"/>
			<bind name="radius" value="12"/>
			<bind name="innerRadius" value="0"/>
		</block>
		<block className="lesta.display.Sector" type="native">
			<style>
				<position value="absolute"/>
				<width value="0px"/>
				<height value="0px"/>
			</style>
			<bind name="alpha" value="reloadPercent &lt; 1 ? 1 : 0.5"/>
			<bind name="color" value="reloadPercent &lt; 1 ? 0xFFFF9933 : 0xFFF1F1F1"/>
			<bind name="arc" value="90 * reloadPercent"/>
			<bind name="offset" value="45"/>
			<bind name="radius" value="12"/>
			<bind name="innerRadius" value="0"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="changeDispatch" value="reloadPercent == 1; 'evReloaded'; {}; 1; true"/>
			<block className="GunItemShootFX">
				<style>
					<position value="absolute"/>
					<alpha value="0"/>
				</style>
				<bind name="appear" value="'evShoot'; 0.3; 0; {alpha: 1, scaleX: 0, scaleY: 0}; {alpha: 0, scaleX: 3, scaleY: 3}; 2"/>
				<bind name="appear" value="'evReloaded'; 0.5; 0; {alpha: 0.5, scaleX: 0, scaleY: 0}; {alpha: 0, scaleX: 5, scaleY: 5}; 1"/>
				<block className="lesta.display.Sector" type="native">
					<bind name="color" value="reloadPercent &lt; 1 ? 0xFFFF9933 : 0xFFF1F1F1"/>
					<bind name="arc" value="90"/>
					<bind name="offset" value="45"/>
					<bind name="radius" value="12"/>
					<bind name="innerRadius" value="0"/>
				</block>
			</block>
		</block>
	</block>
	<block className="GunItem">
		<style>
			<position value="absolute"/>
		</style>
		<bind name="entityDH" value="'entity'; $dataRef.ref"/>
		<bind name="firstEntityDH" value="'cross'; CC.crosshair"/>
		<bind name="firstEntityDH" value="'timerEntity'; CC.timer"/>
		<bind name="watchDH" value="'rotationState'; ['timerEntity.timer.evFrequent']; entity.gun.rotationState"/>
		<bind name="watchDH" value="'reloadPercent'; ['timerEntity.timer.evFrequent']; entity.countDown ? 1 - (entity.countDown.endTime - timerEntity.timer.currentTime) / entity.countDown.duration : 1"/>
		<bind name="watchDH" value="'scaleGunItem'; ['timerEntity.timer.evFrequent']; (1 / (math.abs(entity.gun.screenX) / 600 + 1))"/>
		<bind name="watchDH" value="'healthState'; ['timerEntity.timer.evFrequent']; entity.gun.healthState"/>
		<bind name="watch" value="'isCrit'; healthState == 2"/>
		<bind name="watch" value="'isDead'; healthState == 3"/>
		<bind name="fade" value="(rotationState != 1 &amp;&amp; !isDead) || isCrit; 0.15; {alpha: 0, scaleX: 0, scaleY: 0}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 1.5, scaleY: 1.5}"/>
		<bind name="perFrameUpdate" value="{x : entity.gun.screenX}"/>
		<block>
			<bind name="visible" value="reloadPercent &lt; 1 || rotationState == 3"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.3"/>
			</style>
			<block className="lesta.display.Sector" type="native">
				<bind name="cacheAsBitmap" value="true"/>
				<bind name="color" value="0xFF000000"/>
				<bind name="arc" value="360"/>
				<bind name="offset" value="0"/>
				<bind name="radius" value="8 * scaleGunItem"/>
				<bind name="innerRadius" value="5 * scaleGunItem"/>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="alpha" value="rotationState == 3 ? 0.65 : 1"/>
			<block className="lesta.display.Sector" type="native">
				<bind name="cacheAsBitmap" value="true"/>
				<bind name="color" value="isCrit ? 0xFFe75153 : (reloadPercent &lt; 1) || (rotationState == 2) || (rotationState == 3)  ? 0xFFFF9933 : 0xFFF1F1F1"/>
				<bind name="arc" value="360 * reloadPercent"/>
				<bind name="offset" value="-90"/>
				<bind name="radius" value="8 * scaleGunItem"/>
				<bind name="innerRadius" value="5 * scaleGunItem"/>
			</block>
		</block>
	</block>
</ui>
