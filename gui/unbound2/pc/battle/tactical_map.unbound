(def element AutopilotIndicatorOld () layout=true dispatch_size_change=true
    (scope
        (var battleDataEntity:gfx = "$datahub.getSingleEntity(CC.battleData)")
		(var battleState:number = "battleDataEntity.battleState.battleState" (event "battleDataEntity.battleState.evBattleStateChanged"))
        (var gameModeId:number = "battleDataEntity.battleInfo.gameModeId")
        (var avatarEntity:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var isAlive:bool = "avatarEntity.health.isAlive" (event "avatarEntity.health.evIsAliveChanged"))

        (var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
		(var isTactical:bool = "cameraEntity.camera.isTactical" (event "cameraEntity.camera.evTacticalStateChanged"))

        (var waypointsColl:gfx = "$datahub.getCollection(CC.navpoint)")
        (var hasWaypoints:bool = "waypointsColl.items.length > 0" (event "waypointsColl.evAdded") (event "waypointsColl.evRemoved"))
    )

    (bind visible "isAlive && (battleState == BattleState.STARTED) && (gameModeId != GameMode.TUTORIAL)")

    (style 
        (width = "80px")
        (height = "80px")
        (align = "bottom")
    )

    (block
        (style (align = "center"))
        (block
            (alpha = "hasWaypoints ? 1 : 0.5")        
            (tf
                (style                    
                    (width = "80px")
                    (textAlign = "center")
                )
                (class $TextDefaultBold13NM)
                (bind class "hasWaypoints ? '$FontColorHealth' : '$None'")
                (bind text "hasWaypoints ? 'IDS_AUTOPILOT_ON' : 'IDS_AUTOPILOT'")
            )  
            (controller $Animation
                (bindcall play  duration = 0.3
                                easing = "Easing.cubic_in"
                                from = "{ alpha: 0, y: 10 }"
                                to = "{ alpha: hasWaypoints ? 1 : 0.5, y: 0 }"
                                killAll=true
                                (bind trigger "hasWaypoints")                                
                )
            )  
        )
        
        (block
            (style
                (width = "39px") (height = "29px")
                (bind backgroundImage "'bitmap:autopilot_indicator_' + (hasWaypoints ? 'on' : 'off')")
                (marginTop = "4px")
            )
            (block
                (alpha = "hasWaypoints ? 1 : 0")
                (pivotX = 6)
                (pivotY = 4)
                (style
                    (position = "absolute")
                    (top = "-2px") (right = "7px")
                    (width = "11px") (height = "7px")
                    (backgroundImage = "'bitmap:autopilot_indicator_on_navpoint'")
                ) 
                (controller $Animation
                    (bindcall play  duration = 0.3
                                    easing = "Easing.cubic_in"
                                    from = "{ alpha: 0, scaleX: 0, scaleY: 0 }"
                                    to = "{ alpha: 1, scaleX: 1, scaleY: 1 }"
                                    reverse="!(hasWaypoints)"
                                    killAll=true
                                    (bind trigger "hasWaypoints")
                    )
                )
            )
        )

        (element HotkeyIndicator "Cmd.CMD_TACTICAL_MAP" toggle=true
            (style (marginTop = "-5px"))
            (scope
                (bind toggled "isTactical")
            )
        )
    )
)

(def element AutopilotIndicator () layout=true dispatch_size_change=true
    (scope
        (var battleDataEntity:gfx = "$datahub.getSingleEntity(CC.battleData)")
		(var battleState:number = "battleDataEntity.battleState.battleState" (event "battleDataEntity.battleState.evBattleStateChanged"))
        (var gameModeId:number = "battleDataEntity.battleInfo.gameModeId")
        (var avatarEntity:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var isAlive:bool = "avatarEntity.health.isAlive" (event "avatarEntity.health.evIsAliveChanged"))

        (var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
		(var isTactical:bool = "cameraEntity.camera.isTactical" (event "cameraEntity.camera.evTacticalStateChanged"))

        (var waypointsColl:gfx = "$datahub.getCollection(CC.navpoint)")
        (var hasWaypoints:bool = "waypointsColl.items.length > 0" (event "waypointsColl.evAdded") (event "waypointsColl.evRemoved"))
    )

    (bind visible "isAlive && (battleState == BattleState.STARTED) && (gameModeId != GameMode.TUTORIAL)")

    (style 
        (align = "middle")
        (flow = "Flow.HORIZONTAL")
    )

    (element HotkeyIndicator "Cmd.CMD_TACTICAL_MAP" toggle=true
        (style (marginRight = "4px"))
        (scope
            (bind toggled "isTactical")
        )
    )

    (block
        (style (marginTop = "1px"))
        (block
            (alpha = "hasWaypoints ? 1 : 0.5")        
            (tf            
                (class $TextDefaultBold13NM)
                (bind class "hasWaypoints ? '$FontColorHealth' : '$None'")
                (bind text "hasWaypoints ? 'IDS_AUTOPILOT_ON' : 'IDS_AUTOPILOT'")
            )  
            (controller $Animation
                (bindcall play  duration = 0.3
                                easing = "Easing.cubic_in"
                                from = "{ alpha: 0, marginTop: 10 }"
                                to = "{ alpha: hasWaypoints ? 1 : 0.5, marginTop: 0 }"
                                killAll=true
                                (bind trigger "hasWaypoints")                                
                )
            )  
        )
    )
)

(def element TacticalMapTextGridContainer () layout=true
	(scope
		(var camera:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var isTactical:bool = "camera.isTactical" (event "camera.evTacticalStateChanged"))
	)
	(style
		(position = "absolute")
	)
	(element TacticalMapTextGrid
		(bind visible "isTactical")
	)
)

(def element TacticalMapTextGrid () layout=true
	(scope
		(var tacticalMapTextsCollection:gfx = "$datahub.getCollection(CC.tacticalMapGridTextElement)")
	)
	(style
		(position = "absolute")
	)
	(controller $Repeat renderer='TacticalMapTextGridElement' layout=false
		(bind count "tacticalMapTextsCollection.items.length" (event "tacticalMapTextsCollection.evAdded") (event "tacticalMapTextsCollection.evRemoved"))
		(args _col = "tacticalMapTextsCollection")
	)
)

(def element TacticalMapTextGridElement (_col:gfx) layout=true
	(scope
		(event emptyEventHack)
		(var entity:gfx = "_col.items[$index]" (event "_col.evChanged") (event "_col.evAdded") (event "_col.evRemoved"))
		(var component:gfx = "entity.tacticalMapGridTextElement")
		(var haveScreenPosition:bool = "entity.screenPosition !=null" (event "entity.evAdded") (event "entity.evRemoved"))
		(var posX:number = "entity.screenPosition.position.x" (event "haveScreenPosition ? evEnterFrame : emptyEventHack"))
		(var posY:number = "entity.screenPosition.position.y" (event "haveScreenPosition ? evEnterFrame : emptyEventHack"))
	)
	(style
		(position = "absolute")
		(bind left "posX")
		(bind top "posY")
	)
	(block
		(alpha = 0.3)
		(style
			(position = "absolute")
			(hcenter = 0)
			(vcenter = 0)
		)
		(tf
			(class $TacticalGridText)
			(bind text "component.text" (event "component.evTextUpdated"))
		)
	)
)

(def element TacticalMapHelpElement () layout=true
	(scope
		(var camera:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var isTactical:bool = "camera.isTactical" (event "camera.evTacticalStateChanged"))
		(var avatarEntity:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var isAlive:bool = "avatarEntity.health.isAlive" (event "avatarEntity.health.evIsAliveChanged"))
		(var battleStateEntity:gfx = "$datahub.getSingleEntity(CC.battleState)")
		(var battleState:number = "battleStateEntity.battleState.battleState" (event "battleStateEntity.battleState.evBattleStateChanged"))
	)
	(bind visible "isTactical && isAlive")
	(block
		(style (marginBottom = 28px))
		(tf
			(style (marginBottom = 3px))
			(class $TacticalMapHelpTextTitle)
			(text = 'IDS_QUICK_COMMANDS_C')
		)
		(tf
			(class $TacticalMapHelpText)
			(bindcall substitute imageOffset=5 sourceText="tr('IDS_CMD_QUICK_COMMANDS_WINDOW')+'  [CMD_QUICK_COMMANDS_WINDOW]'" postfix='' toggle=false init=true)
		)
	)
	(block
		(tf
			(style (marginBottom = 3px))
			(class $TacticalMapHelpTextTitle)
			(text = 'IDS_AUTOPILOT_CONTROL')
		)
		(tf
			(style (marginBottom = 20px))
			(class $TacticalMapHelpText)
			(bindcall substitute imageOffset=5 sourceText="tr('IDS_HELP_TACTICAL_MAP_NAVPOINTS')" postfix='' init=true)
		)
		(tf
			(style (marginBottom = 20px))
			(class $TacticalMapHelpText)
			(bindcall substitute imageOffset=5 sourceText="tr('IDS_HELP_TACTICAL_MAP_TURNAUTOPILOTOFF_3')" postfix='' init=true)
		)
		(tf
			(style (marginBottom = 20px))
			(class $TacticalMapHelpText)
			(bindcall substitute imageOffset=5 sourceText="tr('IDS_HELP_TACTICAL_MAP_EXIT')" postfix='' init=true)
		)
	)
)