

(def constant AIRCRAFT_PANEL_INSTRUCTION_MESSAGE
[
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_FIGHTER')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_BOMBER')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_BOMBER_AP')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_TORPEDO')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_TORPEDO_DEEPWATER')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_FIGHTER_AP')" 
])


(def constant AIRCRAFT_PANEL_INSTRUCTION_MESSAGE_NOT_ENOUGH
[
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_FIGHTER_NOT_ENOUGH')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_BOMBER_NOT_ENOUGH')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_BOMBER_AP_NOT_ENOUGH')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_TORPEDO_NOT_ENOUGH')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_TORPEDO_DEEPWATER_NOT_ENOUGH')", 
	"tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_FIGHTER_AP_NOT_ENOUGH')" 
])


(def element AircraftCarrierPanelReturnInstruction () layout=true
	(tf
		(style (maxWidth = 590) (textAlign = "center") (leading = -6))
		(class $TextDefaultBold21NM)
		(bindcall substitute imageOffset="8" sourceText="tr('IDS_CLICK_TO_RETURN_TO_AIRCARRIER_INFO')" postfix='_bg' init=true)
	)
)

(def element AircraftCarrierPanelInstruction (__selectedSquadronEntityId:number) layout=true dispatch_size_change=true
	(scope
		(var _selectedSquadronEntityId:number = "__selectedSquadronEntityId")
		(var _isOnSquadronAndAlive:bool = false)
		(var hasSelectedSquadron:bool = "_selectedSquadronEntityId != -1")

		(var selectedSquadronEntity:gfx = "$datahub.getPrimaryEntity(CC.ownSquadron, _selectedSquadronEntityId)")
		(var numPlanes:number = "selectedSquadronEntity.health.value" (event "selectedSquadronEntity.health.evValueChanged"))
		(var flightState:number = "selectedSquadronEntity.ownSquadron.state" (event "selectedSquadronEntity.ownSquadron.evStateChanged"))
		(var ammoType:number = "selectedSquadronEntity.plane.ammoType")
		(var commandId:number = "selectedSquadronEntity.ownSquadron.commandId")

		(var cmdEntity:gfx = "$datahub.getPrimaryEntity(CC.commandMappingCommand, commandId)")
		(var commandName:str = "cmdEntity.commandMappingCommandName.commandName" (event "cmdEntity.commandMappingCommandName.evChanged"))

		(var isNotEnoughMessage:bool = "numPlanes == 0")
		(var message:str = "isNotEnoughMessage ?
								AIRCRAFT_PANEL_INSTRUCTION_MESSAGE_NOT_ENOUGH[ammoType] :
								subst(AIRCRAFT_PANEL_INSTRUCTION_MESSAGE[ammoType], [], {_cmd: '[' + commandName + ']'})")
        (var resultMessage:str = "hasSelectedSquadron ? message : ''")
        (var showMessage:bool = "flightState == AIRPLANE_FLIGHT_STATE_READY && _isOnSquadronAndAlive")
	)

	(controller $Animation
        (bindcall play duration=0.15 from={alpha:0, y:10} to={alpha:1, y:0} easing="Easing.quad_in" killAll=true (bind enabled "showMessage"))
        (bindcall play duration=0.15 from={alpha:1, y:0} to={alpha:0, y:10} easing="Easing.quad_in" killAll=true (bind enabled "!showMessage"))
    )

	(tf
		(style (maxWidth = 590) (textAlign = "center") (leading = -6))
		(class $TextDefaultBold21NM)
		(bindcall substitute imageOffset="8" sourceText="resultMessage" postfix='_bg' init=true)
	)
)
