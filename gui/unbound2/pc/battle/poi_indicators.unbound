








(def constant MAP_CARRIER_STATE_TO_CT {
	'0':	{ redMultiplier:1,		greenMultiplier:1,		blueMultiplier:1 },
	'1':	{ redMultiplier:1,		greenMultiplier:0.6,	blueMultiplier:0.2 },
	'2':	{ redMultiplier:1,		greenMultiplier:0.6,	blueMultiplier:0.2 },
	'4':	{ redMultiplier:1,		greenMultiplier:0.6,	blueMultiplier:0.2 },
	'8':	{ redMultiplier:1,		greenMultiplier:0.4,	blueMultiplier:0 },
	'16':	{ redMultiplier:1,		greenMultiplier:0.4,	blueMultiplier:0 },
    '32':	{ redMultiplier:1,		greenMultiplier:0.4,	blueMultiplier:0 }
})


(def constant MAP_CARRIER_STATE_TO_IMAGE {
	'0':	'default',
	'1':	'collision',
	'2':	'detected_by_plane',
	'4':	'detected_by_ship',
	'8':	'damage',
    '16':	'artillery_alert',
    '32':	'torpedo_alert'
})


(def element POIIndicatorsContainer () layout=true
	(scope
		(var stageComponent:gfx = "$datahub.getSingleEntity(CC.stage).stage")
		(var stageWidth:number = "stageComponent.width" (event "stageComponent.evStageSizeChanged"))
		(var stageHeight:number = "stageComponent.height" (event "stageComponent.evStageSizeChanged"))

        (var avatar:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var isAlive:bool = "avatar.health.isAlive" (event "avatar.health.evIsAliveChanged"))

        (var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
        (var cameraMode:number = "cameraEntity.camera.mode" (event "cameraEntity.camera.evModeChanged"))
        (var isTactical:bool = "cameraEntity.camera.isTactical" (event "cameraEntity.camera.evTacticalStateChanged"))

        (var poiCollection:gfx = "$datahub.getCollection(CC.pointOfInterest)")
	)

    (bind visible "isAlive && !(isTactical) && cameraMode != CameraMode.SHELLTRACKER")

	(style
		(bind width "stageWidth")
		(bind height "stageHeight")
		(position = "absolute")
	)

    (controller $Repeat renderer='POIIndicatorBase'
        (bind count "poiCollection.items.length" watch=false (event "poiCollection.evAdded"))
        (bindcall removeChildAt "$event[1]" (event "poiCollection.evRemoved"))
    )
)

(def element POIIndicatorBase () layout=true
    (scope
        (var poiCollection:gfx = "$datahub.getCollection(CC.pointOfInterest)")
        (var poiEntity:gfx = "poiCollection.items[$index]" watch=false)

        (var pointOfInterest:gfx = "poiEntity.pointOfInterest")
        (var poiType:number = "pointOfInterest.type")
        (var posX:number = "pointOfInterest.screenPosition.x" (event "evEnterFrame"))
		(var posY:number = "pointOfInterest.screenPosition.y" (event "evEnterFrame"))

        (var typeToChild:str = "poiType == SC.Battle.POI_TYPE.OWN_SHIP 	? 'OwnShipPOI'
																	    : 'StubPOI'")
    )

	(style
		(bind left "posX")
		(bind top "posY")
		(position = "absolute")
	)

	(controller $Instance
		(bind renderer "typeToChild")
		(args _entityId="poiEntity.id")
	)
)

(def element StubPOI (_entityId:number) layout=true
    (scope
        (var entity:gfx = "$datahub.getEntity(_entityId)")
    )
    (macro trace "entity")
)


(def element OwnShipPOI (_entityId:number) layout=true
	(scope
        (var entity:gfx = "$datahub.getEntity(_entityId)")
		(var pointOfInterest:gfx = "entity.pointOfInterest")
		(var angle:number = "radToGrad(pointOfInterest.pointerYaw)" (event "evEnterFrame"))
		(var isOffScreen:bool = "pointOfInterest.isOffScreen" (event "pointOfInterest.evIsOffScreenChanged"))
		(var screenDistToPoint:number = "pointOfInterest.screenDistToPoint" (event "evEnterFrame"))

        (var worldMarkerScale:gfx = "entity.worldMarkerScale" (event "entity.evAdded"))
        (var scaleValue:number = "worldMarkerScale.value" (event "worldMarkerScale.evValueChanged"))

        (var prefsEntity:gfx = "$datahub.getSingleEntity(CC.prefsMarker)")
		(var altVisionMode:number = "prefsEntity.prefsBattle.altVisionMode" (event "prefsEntity.prefsBattle.evUpdate"))

		(var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
		(var altVision:bool = "cameraEntity.camera.altVision" (event "cameraEntity.camera.evAltVisionChanged"))
		(var isAltVisionMode:bool = "altVision || altVisionMode >= AltVisionMode.ENABLED")

		
		(var carrierStateComponent:gfx = "$datahub.getSingleComponent(CC.carrierState)")
		(var carrierState:number = "carrierStateComponent.state" (event "carrierStateComponent.evStateChanged"))

		(var icon:str = "MAP_CARRIER_STATE_TO_IMAGE[carrierState]")

		(event evShow)

		(var currentOffsetY:number = 0)
		(var offsetY:number = "isOffScreen 							? 0 :
							   isAltVisionMode && (scaleValue == 1) ? -45 :
							   isAltVisionMode						? -55
																	: (-45 * scaleValue)")
		(controller $Animation
			(bindcall play 	duration=0.15
							delay=0.3
							to="{ currentOffsetY: offsetY }"
							killAll=true
							watch=false
							(bind enabled "!(isOffScreen)")
							(bind trigger "isAltVisionMode")
			)
			(bindcall play 	duration=0.15
							to="{ currentOffsetY: offsetY }"
							killAll=true
							watch=false
							(bind enabled "isOffScreen")
							(bind trigger "isAltVisionMode")
			)
		)
	)
	
    (dispatch evShow on='addedToStage')
    (alpha = 0)

	(controller $Animation
		(bindcall play  delay=4.0
						duration=0.5
						from="{alpha: 0}"
						to="{alpha: 1}"
						(event "evShow")
		)
	)

    (macro BIND_FAIR_SCALE "isAltVisionMode ? 1 : scaleValue")
	(style
		(bind top "currentOffsetY")
		(position = "absolute")
	)

	
	(block
	(bind colorTransform "MAP_CARRIER_STATE_TO_CT[carrierState]")
		(bind visible "isOffScreen && screenDistToPoint > (45 * scaleValue)")
		(style
			(bind rotation "angle")
		)
		(block
			(style
				(position = "absolute")
				(left = -45) (top = -45)
				(backgroundImage = "'url:../battle_hud/indicators/own_ship_state/poi_arrow.png'")
			)
		)
	)

	
	(block
		(style (position = "absolute"))
		(block
			(alpha = 0)
			(controller $Animation
				(bindcall play 	duration=0.35
								from="{alpha: 0.8, scaleX: 1, scaleY: 1}"
								to="{alpha: 0, scaleX: 3.5, scaleY: 3.5}"
								killAll=true
								watch=false
								repeatCount="carrierState == SC.Battle.CARRIER_STATE.COLLISION					? 1 :
												isIn(carrierState, [SC.Battle.CARRIER_STATE.SPOTTED_BY_PLANE, 
																	SC.Battle.CARRIER_STATE.SPOTTED_BY_SHIP,
																	SC.Battle.CARRIER_STATE.HEAVY_DAMAGE]) 		? 2
																												: 3"
								(event "carrierStateComponent.evStateAdded")
				)
			)
			(controller $Sector
				(color = 0xFFFFFF)
				(arc = 360)
				(radius = 20)
			)
		)
	)

	
	(block
		(style
			(position = "absolute")
			(left = -22) (top = -22)
		)
		(block
			(style
				(position = "absolute")
				(width = 44) (height = 44)
				(hcenter = 44) (vcenter = 44)
			)
			(block
				(class $FullsizeAbsolute)
				(style
					(left = -22) (top = -22)
					(bind backgroundImage "'url:../battle_hud/indicators/own_ship_state/' + icon + '.png'")
				)
			)
		)
	)
)
