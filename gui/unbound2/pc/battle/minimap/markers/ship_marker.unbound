
(def constant SHOOT_RANGE_COLOR 0x999999)
(def constant VISIBILITY_RANGE_COLOR 0x6EE1F7)
(def constant AA_RANGE_COLOR 0xF0A522)
(def constant ATBA_RANGE_COLOR 0xA9C272)
(def constant RLS_RANGE_COLOR 0x00DDFF)

(def constant SHIP_NAMES_COLORS 
    {	
        DEAD: 0xCCCCCC,
        DIVISION: 0xFFCC66,
        ALLY: 0x4CE8AA,
        ENEMY: 0xFE4D2A,
        TEAMKILLER: 0xFF628E, 
        LAST_VIS: 0xFE4D2A
    }
)

(def element MapShipMarker (_entityId:number, _mapScale:number, _itemScale:number, _scaleRatio:number) layout=true
    (scope
        (macro BASE_MAP_MARKER_PARAMS)

        (var isPlayerAvatar:bool = "entity.hasComponent(CC.playerAvatar)")
        (var isAlive:bool = "entity.health.isAlive" (event "entity.health.evIsAliveChanged"))

        (var target:gfx = "entity.target" (event "entity.evAdded") (event "entity.evRemoved"))
        (var targetFlags:number = "target.flags" (event "target.evChanged"))
		(var isTargetLocked:bool = "(targetFlags & (1 << WeaponType.ARTILLERY | 1 << WeaponType.TORPEDO)) > 0")

        (var mapVisible:bool = "entity.visibility.mapVisible" (event "entity.visibility.evChanged"))

        (var markerYaw:number = "radToGrad(entity.mapPosition.yaw)" (event "evEnterFrame"))
        (var markerScale:number = "itemScale / mapScale")

        (var minimapEntity:gfx = "$datahub.getSingleEntity(CC.minimap)")
        (var angleToRotate:number = "minimapEntity.minimap.rotationAngleDeg" (event "minimapEntity.minimap.evRotationAngleDegChanged"))

        (var minimapOptions:gfx = "minimapEntity.minimapOptions")
        (var rangesAlpha:number = "minimapOptions.rangesAlpha / 100" (event "minimapOptions.evChanged"))
        (var shipNamesDisplayEnabled:bool = "minimapOptions.shipNamesDisplayEnabled" (event "minimapOptions.evChanged"))

        (var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
    	(var altVision:bool = "cameraEntity.camera.altVision" (event "cameraEntity.camera.evAltVisionChanged"))
    )

    (block
        (style (position = "absolute"))
        (controller $Instance (renderer = 'MapMarkerDirectionalLine') 
            (bind enabled "(isPlayerAvatar || isTargetLocked) && isAlive && mapVisible")
            (exprs
                (bind rotation "markerYaw")
                (bind alpha "rangesAlpha")
            )
        )
    )

    (block
        (style (position = "absolute"))
        (controller $Instance (renderer = 'MapMarkerShipRanges') 
            (bind enabled "isPlayerAvatar && isAlive")
            (args _entityId="entity.id" _mapScale="mapScale")
            (exprs
                (scope
                    (bind mapScale "mapScale")
                )
            )
        )    
    )

    (block
        (style (position = "absolute"))
        (element MapMarkerShipIcon 
            _entityId="entity.id"
            (bind rotation "markerYaw")
            (macro BIND_FAIR_SCALE "markerScale")
        )    
    )
    
    (block
        (style (position = "absolute"))
        (controller $Instance (renderer = 'MapMarkerShipName') 
            (bind enabled "!(isPlayerAvatar) && isAlive && (shipNamesDisplayEnabled || altVision)")
            (args _entityId="entity.id")
            (exprs
                (bind rotation "-(angleToRotate)")
                (macro BIND_FAIR_SCALE "markerScale")
            )
        )    
    )
)

(def element MapMarkerShipRanges (_entityId:number, _mapScale:number) layout=true
    (scope
        (var mapScale:number = "_mapScale")
    )
    (macro MINIMAP_MARKER_RANGES "_entityId")
)

(def element MapMarkerDirectionalLine () layout=true
    (style 
        (position = "absolute")
        (backgroundImage = "'symbol:minimap_direction_line'")
    )
)

(def element MapMarkerShipIcon (_entityId:number) layout=true
    (scope
        (macro SHIP_MARKER_ICON_DATA "_entityId")

        (var aircarrierEntity:gfx = "$datahub.getSingleEntity(CC.aircarrier)")
        (var squadronCameraMode:bool = "aircarrierEntity.aircarrier.activeSquadron != -1" (event "aircarrierEntity.aircarrier.evStateChanged"))

        (var visibilityPostfix:str = "mapVisible && !(worldVisible) ? '_invis'
                                                                    : ''")                                                                   

		(var markerIcon:str = 
			"!(mapVisible) && !(worldVisible)
                ? (isAlive ? shipType + '_last_vis' : shipType + '_dead')
                : isAlive
                    ? isSelf
                        ? (squadronCameraMode ? 'self_alive_on_squadron' : 'self_alive')
                        : isAlly
                            ? isInSameDivision
                                ? shipType + '_division'
                                : tkStatus
                                    ? shipType + '_teamkiller' + visibilityPostfix
                                    : shipType + '_ally' + visibilityPostfix
                            : shipType + '_enemy' + visibilityPostfix
                : isSelf
                    ? (squadronCameraMode ? 'self_dead_on_squadron' : 'self_dead')
                    : shipType + '_dead'")
    )

    (block
        (bind name "worldVisible ? 'map_marker_ship_' + entity.avatar.id : ''")
		(style (bind backgroundImage "shipType ? 'symbol:' + toLower('minimap_' + markerIcon) : ''"))
	)
)

(def element MapMarkerShipName (_entityId:number) layout=true
    (scope
        (macro SHIP_MARKER_ICON_DATA "_entityId")
        (var shipName:str = "avatarComponent.ship.ref.ship.nameUpper")
        (var spectatorEntity:gfx = "$datahub.getSingleEntity(CC.spectator)")
        (var isSpectator:bool = "spectatorEntity != null")

        (var textColor:number =
            "!(mapVisible) && !(worldVisible)
                ? isSpectator
                    ? isAlly
                        ? SHIP_NAMES_COLORS['ALLY']
                        : SHIP_NAMES_COLORS['ENEMY']
                    : SHIP_NAMES_COLORS['LAST_VIS']
                : isAlive 
                    ? isAlly
                        ? isInSameDivision
                            ? SHIP_NAMES_COLORS['DIVISION']
                            : tkStatus 
                                ? SHIP_NAMES_COLORS['TEAMKILLER']
                                : SHIP_NAMES_COLORS['ALLY']
                        : SHIP_NAMES_COLORS['ENEMY']
                    : SHIP_NAMES_COLORS['DEAD']")
    )
    
    (style (width = 100%) (align = "center"))
    (tf
        (class $FontEnableReadability)
        (class $TextDefaultBold9NM)
        (style
            (marginTop = "3px")
            (bind textColor "textColor")
        )
        (bind text "shipName")
    )
)
