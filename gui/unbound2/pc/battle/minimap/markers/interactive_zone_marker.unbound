(def constant INTERACTIVE_ZONE_TYPES
	{
		NO_TYPE: 0,
		RESOURCE_ZONE: 1,
		CONVOY_ZONE: 2,
		REPAIR_ZONE: 3,
		FEL_ZONE: 4,
		WEATHER_ZONE: 5,
		DROP_ZONE: 6
	}
)

(def constant INTERACTIVE_ZONES_SETTINGS "[
		{color: 0xFFFFFF, alpha: 0},
		{color: 0xFFFFFF, alpha: 0},
		{color: 0xFFFFFF, alpha: 0},
		{color: 0xFFFFFF, alpha: 0},
		{color: 0xFF0000, alpha: 0.2},
		{color: 0xFFFFFF, alpha: 0.2},
		{color: 0xFFFFFF, alpha: 0.2}
]")

(def element MapInteractiveZoneMarker (_entityId:number, _mapScale:number, _itemScale:number, _scaleRatio:number) layout=true
	(scope
		(macro BASE_MAP_MARKER_PARAMS)

		(var type:number = "entity.interactiveZone.type")
		(var circleSettings:dict = "INTERACTIVE_ZONES_SETTINGS[type]")
		(var circleRadius:number = "entity.circle.radius" (event "entity.circle.evRadiusChanged"))

		(event evShow)
		(event evHide)
	)

	(dispatch evShow on=addedToStage)
	(dispatch evHide (event "entity.interactiveZone.evHide"))

	
	
	(block
		(macro BIND_FAIR_SCALE "circleRadius")
		(bind alpha "circleSettings.alpha")
		(style (position = "absolute"))

		(block
			(controller $Sector
				(bind arc "360")
				(bind color "circleSettings.color")
				(bind radius "MINIMAP_ASSETS_SIZE")
			)

			(controller $Animation        
				(bindcall  play
					duration=0.3
					from={alpha: 0}
					to={alpha: 1}
					easing="Easing.quint_in"
					(event "evShow")
				)
				(bindcall  play
					duration=0.3
					to={alpha: 0}
					easing="Easing.quint_in"
					(event "evHide")
				)
			)
		)
	) 
	

	
	
	(block
		(style (position = "absolute"))

		(controller $Instance (renderer = 'MapInteractiveZoneIndicator') 
			(bind enabled "type == INTERACTIVE_ZONE_TYPES.RESOURCE_ZONE")
			(args _entityId="entity.id")
			(exprs
				(macro BIND_FAIR_SCALE "itemScale / mapScale")
			)
		)

		(controller $Instance (renderer = 'MapDropZoneIndicator') 
			(bind enabled "type == INTERACTIVE_ZONE_TYPES.DROP_ZONE")
			(args _entityId="entity.id")
			(exprs
				(macro BIND_FAIR_SCALE "itemScale / mapScale")
			)
		)

		(controller $Animation        
			(bindcall  play
				duration=0.3
				from={alpha: 0, scaleX: 0, scaleY: 0}
				to={alpha: 1, scaleX: 1, scaleY: 1}
				easing="Easing.quint_in"
				(event "evShow")
			)
			(bindcall  play
				duration=0.3
				from={alpha: 1, scaleX: 1, scaleY: 1}
				to={alpha: 0, scaleX: 0, scaleY: 0}
				easing="Easing.quint_in"
				(event "evHide")
			)
		)
	)
	
)

(def element MapInteractiveZoneIndicator (_entityId:number) layout=true
	(scope
		(var entity:gfx = "$datahub.getEntity(_entityId)")

		(var resourceHolder:gfx = "entity.resourceHolder" (event "entity.evAdded"))
		(var resourceName:str = "resourceHolder.resourceName")
		(var resourceType:number = "resourceHolder.resourceType")
		(var loading:bool = "resourceHolder.loading")

		(var enabled:bool = "!isIn(resourceType, SC.Battle.RESOURCE_TYPES.HIDDEN_RESOURCE_ZONES)")
	)

	(style
		(width = "26px") (height = "26px")
	)

	(bind visible "enabled")

	(block
		(style
			(position = "absolute") (top = "-13px") (left = "-13px")
			(bind backgroundImage "'bitmap:scenario_minimap_marker_' + toLower(resourceName) + (loading ? '_gathering' : '_unloading')" (bind enabled "enabled"))
		)
	)
)

(def element MapDropZoneIndicator (_entityId:number) layout=true
	(scope
		(var entity:gfx = "$datahub.getEntity(_entityId)")

		(var dropComponent:gfx = "entity.drop" (event "entity.evAdded"))
		(var isActive:bool = "dropComponent.isActive" (event "dropComponent.evIsActiveChanged"))
		(var markerName:str = "isActive ? dropComponent.markerNameActive : dropComponent.markerNameInactive")
	)

	(style
		(width = "30px") (height = "30px")
	)

	(block
		(style
			(position = "absolute") (top = "-15px") (left = "-15px")
			(bind backgroundImage "'url:../powerups/icon_marker_' + markerName+ '_small.png'")
		)
	)
)