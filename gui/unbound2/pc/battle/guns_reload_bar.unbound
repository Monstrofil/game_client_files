(def constant SIMULTANEOUS_UNACTIVE_BAR_ALPHA 0.5)
(def constant SIMULTANEOUS_DISSAPEAR_ANIM_DY 0)
(def constant SIMULTANEOUS_APPEAR_ANIM_DY 20)
(def constant SIMULTANEOUS_CHANGE_TIME 0.3)
(def constant SIMULTANEOUS_APPEAR_DELAY 0.085)

(def constant RELOAD_WEAPON_ICON_WIDTH 26)
(def constant RELOAD_WEAPON_ICON_HEIGHT 26)

(def constant RELOAD_BAR_CENTER_WIDTH 13)
(def constant RELOAD_BAR_MAX_WIDTH 504)
(def constant RELOAD_BAR_HEIGHT 26)

(def constant MAX_BARS_ON_SINGLE_LINE 7)
(def constant RELOAD_BAR_GREEN_COLOR_TRANSFORM {'color':0x4CE8AA})
(def constant RELOAD_BAR_YELLOW_COLOR_TRANSFORM {'color':0xF78913})
(def constant RELOAD_BAR_NO_COLOR_TRANSFORM {})

(def constant ReloadBarSize {
	SMALL: 46,
	MEDIUM: 82,
	LARGE: 176
})

(def constant ReloadBarState {
	NORMAL: 0,
	IN_PROGRESS: 1,
	BLOCKED: 2,
	CRIT: 3,
	DEAD: 4,
	CHARGING: 5
})

(def macro HLSTATE_TO_BAR_STATE_SCOPE ()
	(var HLSTATE_TO_BAR_STATE:array = "[
		ReloadBarState.NORMAL,
		ReloadBarState.NORMAL,
		ReloadBarState.CRIT,
		ReloadBarState.DEAD,
		ReloadBarState.DEAD
	]")
)

(def element GunsReloadBarContainer () layout=true dispatch_size_change=true
	(scope
		(var prefsBattle:gfx = "$datahub.getSingleComponent(CC.prefsBattle)")
		(var simultaneousReload:bool = "prefsBattle.simultaneousReload" (event "prefsBattle.evUpdate"))
		(var weaponsCollection:gfx = "$datahub.getCollection(CC.weapon)")
		(var weaponItems:array = "weaponsCollection.items")
		(var hasPinger:bool = "weaponsCollection.getChildByPath('byWeaponType.' + WeaponType.PINGER) != null")

		(var haveFewWeapons:bool = "weaponItems.length > 1")

		(var avatarEntity:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var isAlive:bool = "avatarEntity.health.isAlive" (event "avatarEntity.health.evIsAliveChanged"))

		(var aircarrier:gfx = "$datahub.getSingleComponent(CC.aircarrier)")
		(var activeSquadron:number = "aircarrier ? aircarrier.activeSquadron : ActiveSquadron.NONE" (event "aircarrier.evStateChanged"))
		(var squadronCameraMode:str = "aircarrier.squadronCameraMode" (event "aircarrier.evSquadronCameraModeChanged"))
		(var isLastLookCamera:bool = "aircarrier && (squadronCameraMode != SquadronCameraModes.DEFAULT)")

		(var showFewBars:bool = "simultaneousReload || hasPinger")
		(var isVisible:bool = "isAlive && activeSquadron == ActiveSquadron.NONE && !(isLastLookCamera)")
	)

	(alpha = 0)

	(style
		(minHeight = "RELOAD_BAR_HEIGHT + 12")
	)

	(controller $Animation
		(play duration=0.5 delay=0.5 to={alpha: 1})
	)

	(controller $Instance renderer='SingleGunReloadBar'
		(bind enabled "(!(showFewBars) || !(haveFewWeapons)) && isVisible")
	)
	(controller $Instance renderer='FewGunsReloadBar'
		(bind enabled "showFewBars && haveFewWeapons && isVisible")
	)
)

(def element SingleGunReloadBar () layout=true
	(scope
		(var selectedWeaponComponent:gfx = "$datahub.getSingleComponent(CC.weaponController)")
		(var activeWeaponType:number = "selectedWeaponComponent ? selectedWeaponComponent.selectedWeapon : -1" (event "selectedWeaponComponent.evSelectedWeaponChanged")(event "selectedWeaponComponent.evSelectedAmmoChanged"))
		(var gunCollection:gfx = "$datahub.getCollection(CC.gun).child('byWeaponType').child(activeWeaponType)")
		(var rowsCount:number = "gunCollection ? ceil(gunCollection.items.length / MAX_BARS_ON_SINGLE_LINE) : 0")
	)

	(style
		(bind height "rowsCount * RELOAD_BAR_HEIGHT + 3")
	)

	(element GunListReloadBar
		(scope
			(bind weaponType "activeWeaponType")
			(bind totalRowCount "rowsCount")
			(bind weaponTypeIsActive "true")
		)
	)
)

(def element FewGunsReloadBar () layout=true
	(scope
		(event evGunListReloadBarAdded)
		(var weaponItems:array = "$datahub.getCollection(CC.weapon).items")
		(var selectedWeaponComponent:gfx = "$datahub.getSingleComponent(CC.weaponController)")
		(var activeWeaponType:number = "selectedWeaponComponent ? selectedWeaponComponent.selectedWeapon : -1"  (event "selectedWeaponComponent.evSelectedWeaponChanged") (event "selectedWeaponComponent.evSelectedAmmoChanged"))
		(var hasActiveWeaponBar:bool = "activeWeaponType >= 0 && activeWeaponType != WeaponType.AIRPLANES")

		(var rowsCount:number = 0)
		(bind rowsCount "rowsCount + $event._rowsCount" watch=false init=false (event "evGunListReloadBarAdded"))		
	)

	(style
		(bind height "rowsCount * RELOAD_BAR_HEIGHT + 3")
	)

	
	(controller $Animation
		(bindcall play duration="SIMULTANEOUS_CHANGE_TIME" to="{marginTop: -RELOAD_BAR_HEIGHT*rowsCount, alpha: 0}" killAll=true (bind enabled "!(hasActiveWeaponBar)"))
		(bindcall play duration="SIMULTANEOUS_CHANGE_TIME" to="{marginTop: 0, alpha: 1}" killAll=true (bind enabled "(hasActiveWeaponBar)"))
	)

	(controller $Repeat renderer='GunListReloadBar' count="weaponItems.length"
		(args
			showWeaponIcon = true
		)
		(exprs
			(scope
				(bind weaponType "weaponItems[$index].weapon.type")
				(bind totalRowCount "rowsCount")
				(bind weaponTypeIsActive "activeWeaponType == weaponItems[$index].weapon.type " watch=false (bind enabled "hasActiveWeaponBar") (bind trigger "activeWeaponType")) 	
			)
		)
	)
)

(def macro GUN_LIST_ANIMATION ()
	(style
		(alpha = "weaponTypeIsActive ? 1 : SIMULTANEOUS_UNACTIVE_BAR_ALPHA")
		(position = "absolute")
		(top = "weaponTypeIsActive ? otherTypeRowCount * RELOAD_BAR_HEIGHT : 0")
	)

	(controller $Animation
		(bindcall play duration="SIMULTANEOUS_CHANGE_TIME/2" to="{top: -SIMULTANEOUS_DISSAPEAR_ANIM_DY - otherTypeRowCount*RELOAD_BAR_HEIGHT, alpha: 0}" killAll=true (bind enabled "weaponTypeIsActive"))
		(bindcall play duration="SIMULTANEOUS_CHANGE_TIME/2" delay="SIMULTANEOUS_CHANGE_TIME/2+SIMULTANEOUS_APPEAR_DELAY"
			from="{alpha:0, top: otherTypeRowCount*RELOAD_BAR_HEIGHT + SIMULTANEOUS_APPEAR_ANIM_DY}"
			to="{top: otherTypeRowCount*RELOAD_BAR_HEIGHT, alpha: 1}"
			(bind enabled "weaponTypeIsActive")
		)
		(bindcall play duration="SIMULTANEOUS_CHANGE_TIME" from="{top: otherTypeRowCount*RELOAD_BAR_HEIGHT, alpha: 1}" to="{top: 0, alpha: SIMULTANEOUS_UNACTIVE_BAR_ALPHA}" killAll=true (bind enabled "!weaponTypeIsActive"))
	)
)

(def element GunListReloadBar (showWeaponIcon:bool = false) layout=true
	(scope
		(var weaponTypeIsActive:bool = "false")
		(var weaponType:number = 0)
		(var totalRowCount:number = 0)

		(var weaponEntity:gfx = "$datahub.getPrimaryEntity(CC.weapon, weaponType)")

		(var gunCollection:gfx = "$datahub.getCollection(CC.gun).child('byWeaponType').child(weaponType)")
		(var rowsCount:number = "gunCollection ? ceil(gunCollection.items.length / MAX_BARS_ON_SINGLE_LINE) : 0")

		(var otherTypeRowCount:number = "totalRowCount - rowsCount")
		(var showReloadPart:bool = "weaponTypeIsActive && weaponEntity && weaponEntity.weapon.canForceReload" (event "weaponEntity.weapon.evCanForceReloadChanged"))
		(var gunItems:array = "gunCollection ? gunCollection.items : null" (event "gunCollection.evAdded") (event "gunCollection.evRemoved"))
		(var gunsCount:number = "gunItems ? gunItems.length : 0")

		(event evGunListReloadBarAdded)
	)

	(dispatch evGunListReloadBarAdded args="{_rowsCount : rowsCount}" dir="EventDirection.UP" on=addedToStage)

	(style (position = "absolute"))

	(macro GUN_LIST_ANIMATION)

	(hblock
		(style
			(marginLeft = "-50%")
			(maxWidth = "RELOAD_BAR_MAX_WIDTH")
		)

		(block
			(style
				(position = "absolute")
				(left = "-40px")
				(width = "40px")
			)

			(hblock
				(bind visible "showReloadPart")
				(style
					(position = "absolute")
					(top = "5px")
					(right = 0)
				)
				(element HotkeyIndicator "Cmd.CMD_TORPEDO_RELOAD"
					(style (marginRight = "2px"))
				)
				(mc torpedo_reload)
			)

			(block
				(bind visible "showWeaponIcon && !(showReloadPart)")
				(style
					(position = "absolute")
					(right = 0)
					(width = "RELOAD_WEAPON_ICON_WIDTH")
					(height = "RELOAD_WEAPON_ICON_HEIGHT")
					(bind backgroundImage "'url:../battle_hud/reload_bars/weaponType/reload_bar_weapon_type_' + weaponType + '.png'" (bind enabled "showWeaponIcon && (gunsCount > 0)"))
				)
			)
		)

		(htile
			(style
				(maxWidth = "RELOAD_BAR_MAX_WIDTH")
				(align = "center")
				(marginTop = -5px)
			)
			(controller $Repeat renderer='GunReloadBarRenderer'
				(bind count "gunsCount")
				(args __weaponGuns="gunItems")
				(exprs
					(scope
						(bind _weaponGuns "gunItems")
					)
				)
			)

			(controller $Instance renderer='WaveGunReloadBarRenderer'
				(bind enabled "weaponType == WeaponType.PINGER")
			)
		)
	)
)

(def element WaveGunReloadBarRenderer () layout=true
	(scope
		(var weaponEntity:gfx = "$datahub.getPrimaryEntity(CC.weapon, WeaponType.PINGER)")
		(var countdown:gfx = "weaponEntity && weaponEntity.hasComponent(CC.countDown) ? weaponEntity.countDown : null" (event "weaponEntity.evAdded") (event "weaponEntity.evRemoved"))		
		(var remainTime:number = "countdown ? countdown.remain : 0" (event "countdown.evRemainChanged"))
		(var percentPassed:number = "countdown ? remainTime / countdown.duration : 0")
		(var isReloading:bool = "countdown != null")

		(var selfVehicleEntity:gfx = "$datahub.getSingleEntity(CC.selfVehicle)")
		(var energyValue:number = "selfVehicleEntity.energy ? selfVehicleEntity.energy.value : 0" (event "selfVehicleEntity.energy.evValueChanged"))

		(var selectedIndex:number = "weaponEntity.weaponControl.selectedIndex" (event "weaponEntity.weaponControl.evSelectedIndexChanged"))
		(var pingEnergyCost:number = "weaponEntity.weaponControl.ammoTypes[selectedIndex]")
		(var isDangerLevel:bool = "energyValue < pingEnergyCost")

		(var reloadBarState:number = "isDangerLevel || isReloading 	? ReloadBarState.IN_PROGRESS : ReloadBarState.NORMAL")

		(macro HUMAN_READABLE_COUNTDOWN_SCOPE "remainTime")
	)

	(style
		(marginLeft = "RELOAD_WEAPON_ICON_WIDTH")
		(marginTop = "15px")
	)

	(hblock
		
		(block
			(style
				(position = "absolute")
				(left = "-15px")
				(width = "11px")
				(height = "11px")
				(align = "middle|right")
			)
			(alpha = 0.7)
			(tf
				(class $TextDefaultNM)
				(class $FontSizeNano)
				(class $FontEnableReadability)
				(bind text "1")
			)
		)

		(block
			
			(hblock
				(bind visible "remainTime > 0")
				(style
					(position = "absolute")
					(top = "-12px")
					(width = 100%)
					(align = "center|middle")
				)
				(tf
					(alpha = 0.7)
					(class $TextDefaultNM)
					(class $FontEnableReadability)
					(bind text "countdownText")
				)
			)

			
			(hblock
				(controller $Repeat renderer='ReloadBarAdapter'
					(bind count "1")
					(exprs
						(scope
							(bind totalCount "1")
							(bind activeCount "1")
							(bind size "ReloadBarSize.LARGE")
							(bind barState "reloadBarState")
							(bind progress "1 - percentPassed")
						)
					)
				)
			)
		)
	)
)

(def element GunReloadBarRenderer (__weaponGuns:array) layout=true
	(scope
		(var _weaponGuns:array = "__weaponGuns")
		(var itemsCount:number = "_weaponGuns.length")
		(var gunEntity:gfx = "_weaponGuns.length > 0 ? _weaponGuns[$index] : null")
		(var gunComponent:gfx = "gunEntity ? gunEntity.gun : null")
		(var gunTargetComponent:gfx = "gunEntity ? gunEntity.gunTarget : null")

		(var gunHealthState:number = "gunComponent.status" (event "gunComponent.evStatusChanged"))
		(var gunState:number = "gunComponent.state" (event "gunComponent.evStateChanged"))
		(var gunPositionID:number = "gunComponent ? gunComponent.position : 0")

		(var battleStateComponent:gfx = "$datahub.getSingleComponent(CC.battleState)")
		(var battleState:number = "battleStateComponent.battleState" (event "battleStateComponent.evBattleStateChanged"))

		(var isReady:bool = "gunState == SC.Weapons.GUN_STATE.READY")
		(var isWorking:bool = "gunState == SC.Weapons.GUN_STATE.WORK")
		(var isReloading:bool = "gunState == SC.Weapons.GUN_STATE.RELOAD")
		(var isAiming:bool = "gunTargetComponent ? gunTargetComponent.azimuth != 0 : false" (event "gunTargetComponent.evAzimuthChanged"))
		(var isDamaged:bool = "gunHealthState > HitLocationState.NORMAL")
		(var isCrit:bool = "gunHealthState == HitLocationState.CRIT")
		
		(var isTransparent:bool = "(gunTargetComponent ? gunTargetComponent.invalid : true) && battleState == BattleState.STARTED && !(isDamaged)" (event "gunTargetComponent.evInvalidChanged"))

		(var progress:gfx = "gunEntity && gunEntity.hasComponent(CC.progress) ? gunEntity.progress : null" (event "gunEntity.evAdded") (event "gunEntity.evRemoved"))		
		(var progressTime:number = "progress ? progress.value : 0" (event "progress.evChanged"))
		(var remainTime:number = "(progress && !isWorking)	? isCrit ? progress.value
													 				 : progress.max - progress.value 
															: 0" (event "progress.evChanged"))
		(macro HUMAN_READABLE_COUNTDOWN_SCOPE "remainTime")

		(var barrelsComponent:gfx = "gunEntity && gunEntity.hasComponent(CC.barrelsModifier) ? gunEntity.barrelsModifier : null")
		(var totalBarrels:number = "barrelsComponent ? barrelsComponent.barrels.length : 1" (event "barrelsComponent.evChanged"))

		(var barrelShotMode:bool = "barrelsComponent && barrelsComponent.mode == SC.Weapons.BARREL_FIRE_MODE.SINGLE" (event "barrelsComponent.evModeChanged"))

		
		(event evFastResetAnimationProgress)
		(var dischargeFakeAnimationProgress:number = "1")
		(var isAnimated:bool = "dischargeFakeAnimationProgress < 1")
		(var isCharging:bool = "gunState == SC.Weapons.GUN_STATE.CHARGE || isAnimated")
		
		(dispatch evFastResetAnimationProgress dir="EventDirection.DOWN" (event "gunComponent.evCharged") (bind enabled "gunComponent"))

		(controller $Animation
			(bindcall play
				duration="0.1" delay="0"
				from="{dischargeFakeAnimationProgress: 0}"
				to="{dischargeFakeAnimationProgress: 1}"
				(event "evFastResetAnimationProgress")
			)
		)
		
				
		(var reloadBarItemSize:number = "	itemsCount <= 2		? ReloadBarSize.LARGE :
											itemsCount < 4		? ReloadBarSize.MEDIUM
																: ReloadBarSize.SMALL")
		(var reloadBarsCount:number = "isDamaged || !(barrelShotMode) ? 1 : totalBarrels")
		(var reloadBarSize:number = "reloadBarsCount > 1 ? round(reloadBarItemSize / totalBarrels) : round(reloadBarItemSize / totalBarrels) * totalBarrels")

		(macro HLSTATE_TO_BAR_STATE_SCOPE)

		(var reloadBarState:number = "	isWorking                                   ? ReloadBarState.NORMAL :
										isDamaged									? HLSTATE_TO_BAR_STATE[gunHealthState] :
										isCharging									? ReloadBarState.CHARGING :
										(isReloading || isTransparent || isAiming) 	? ReloadBarState.IN_PROGRESS
																					: HLSTATE_TO_BAR_STATE[gunHealthState]")
	)

	(bind name "'gun_0' + itemsCount + '_0' + gunPositionID")
	(style
		(marginLeft = "RELOAD_WEAPON_ICON_WIDTH")
		(marginTop = "15px")
	)

	(bind alpha "isTransparent ? 0.5 : 1")

	(controller $Animation
		(bindcall play duration=0.3 to={alpha:1} killAll=true (bind enabled "!(isTransparent)"))
		(bindcall play duration=0.3 to={alpha:0.5} killAll=true (bind enabled "isTransparent"))
	)

	(hblock
		
		(block
			(style
				(position = "absolute")
				(left = "-15px")
				(width = "11px")
				(height = "11px")
				(align = "middle|right")
			)
			(bind alpha "	reloadBarState == ReloadBarState.CRIT	? 1 :
							reloadBarState == ReloadBarState.DEAD	? 0.3
																	: 0.7")
			(tf
				(class $TextDefaultNM)
				(class $FontSizeNano)
				(class $FontEnableReadability)
				(style
					(bind textColor "reloadBarState == ReloadBarState.CRIT ? 0xFF3300 : 0xFFFFFF")
				)
				(bind text "gunPositionID")
			)
		)

		(block
			
			(hblock
				(bind visible "remainTime > 0")
				(style
					(position = "absolute")
					(top = "-12px")
					(width = 100%)
					(align = "center|middle")
				)
				(block
					(bind visible "reloadBarState == ReloadBarState.CRIT")
					(style
						(width = "14px")
						(height = "16px")
						(marginTop = "-2px")
						(backgroundImage = "'bitmap:icon_repair'")
					)
				)
				(tf
					(alpha = 0.7)
					(class $TextDefaultNM)
					(class $FontEnableReadability)
					(bind text "countdownText")
				)
			)

			
			(hblock
				(controller $Repeat renderer='ReloadBarAdapter'
					(bind count "reloadBarsCount")
					(exprs
						(scope
							(bind size "reloadBarSize")
							(bind barState "reloadBarState")
							(bind progressEntityId "barrelShotMode ? barrelsComponent.barrels[$index] : gunEntity.id")
						)
					)
				)	
			)
		)
	)
)

(def element ReloadBarAdapter () layout=true
	(scope
		(event evFastResetAnimationProgress)
		(var size:number = 0)
		(var barState:number = 0)
		
		(var progressEntityId:number = "-1" init=false)
		(var progressComponent:gfx = "$datahub.getEntity(progressEntityId).progress" init=false)
		(var progress:number = "progressComponent ? progressComponent.value / progressComponent.max : 0" (event "progressComponent.evChanged"))
		(var isBarActive:bool = "progressComponent ? progressComponent.value > 0 : false"  (event "progressComponent.evChanged"))

		(controller $Animation
			(bindcall play
				duration="0.1" delay="0"
				from="{progress: 1}"
				to="{progress: 0}"
				(event "evFastResetAnimationProgress")
			)
		)
	)
	
	(element ReloadBar
		(scope
			(bind size "size")
			(bind barState "barState")
			(bind progress "progress")
			(bind isBarActive "isBarActive")
		)
	)
)

(def element ReloadBar () layout=true
	(scope
		(var size:number = 0)
		(var barState:number = 0)
		(var progress:number = 0)
		(var isBarActive:bool = true)
		
		(var barCenterWidth:number = "size < ReloadBarSize.SMALL ? 0 : RELOAD_BAR_CENTER_WIDTH")
		(var barSidesWidth:number = "round((size - barCenterWidth) / 2)")

		(var barColor:str = "	barState == ReloadBarState.NORMAL 		? 'green'	:
								barState == ReloadBarState.IN_PROGRESS 	? 'yellow' 	:
								barState == ReloadBarState.CHARGING		? 'blue'	:
								barState == ReloadBarState.BLOCKED		? 'gray'
																		: 'crit'")
		(var barColorTransform:dict = "	barState == ReloadBarState.NORMAL 		? RELOAD_BAR_GREEN_COLOR_TRANSFORM :
										barState == ReloadBarState.IN_PROGRESS 	? RELOAD_BAR_YELLOW_COLOR_TRANSFORM :
										RELOAD_BAR_NO_COLOR_TRANSFORM")

		(var barImageUrl:str = "'url:../battle_hud/reload_bars/bar/' + barColor + '/reload_bar_' + barColor")

		(var trackStateFolder:str = "barState == ReloadBarState.DEAD ? 'dead' : 'normal'")
		(var trackImageUrl:str = "'url:../battle_hud/reload_bars/track/' + trackStateFolder + '/reload_bar_track' + (barState == ReloadBarState.DEAD ? '_dead' : '')")
	)

	(style
		(height = "11px")
		(bind width "size")
	)

	
	(hblock
		(style
			(position = "absolute")
			(height = "100%")
		)
		(macro RELOAD_BAR_GRAPHICS graphicsPrefix="trackImageUrl" hideCenterPart="size < ReloadBarSize.SMALL")
	)

	
	(hblock
		(bind visible "isBarActive && barState != ReloadBarState.DEAD")
		(bind colorTransform "barColorTransform")
		(style
			(position = "absolute")
			(height = "100%")
		)
		(macro RELOAD_BAR_GRAPHICS graphicsPrefix="barImageUrl" hideCenterPart="size < ReloadBarSize.SMALL")
		
		
		(block
			(style
				(position = "absolute")
				(height = "100%")
				(bind width "size * progress")
				(backgroundColor = "0x01000000")
			)
			(isMask = true)
		)
	)
)

(def macro RELOAD_BAR_GRAPHICS (graphicsPrefix:expression, hideCenterPart:expression="false")
	(block
		(style
			(height = 100%)
			(bind width "barSidesWidth")
			(bind backgroundImage "graphicsPrefix + '_left.png'")
			(backgroundSize = "fill")
			(scale9grid = "rect(3, 2, 1, 2)")
		)
	)
	(block
		(bind visible "!(hideCenterPart)")
		(style
			(height = 100%)
			(width = "RELOAD_BAR_CENTER_WIDTH")
			(bind backgroundImage "graphicsPrefix + '.png'")
			(backgroundSize = "fill")
			(scale9grid = "rect(1)")
		)
	)
	(block
		(style
			(height = 100%)
			(bind width "barSidesWidth")
			(bind backgroundImage "graphicsPrefix + '_right.png'")
			(backgroundSize = "fill")
			(scale9grid = "rect(1, 2, 3, 2)")
		)
	)
)
