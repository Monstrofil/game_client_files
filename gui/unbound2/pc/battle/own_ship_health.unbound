(def constant FIRE_ICON_SCALE "26.0/44.0")

(def constant BAR_IMAGE_WIDTH "186")
(def constant BAR_IMAGE_HEIGHT "48")

(def constant HEALTH_ANI_DELAY "0.6")
(def constant HEALTH_ANI_MIN "0.3")
(def constant HEALTH_ANI_MAX "1.3")

(def constant SHIP_HP_TRANSFORM_COLORS   {
	NONE:          	{ redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:0,greenOffset:0,blueOffset:0,alphaOffset:0 },
	WHITE:          { redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:50,greenOffset:50,blueOffset:50,alphaOffset:0 },
	GREEN:          { redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:-150,greenOffset:50,blueOffset:-15,alphaOffset:0 },
	YELLOW:         { redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:255,greenOffset:-10,blueOffset:-255,alphaOffset:0 },
	RED:            { redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:255,greenOffset:-100,blueOffset:-220,alphaOffset:0 },
	BLACK:          { redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:255,greenOffset:-100,blueOffset:-220,alphaOffset:0 },
	POSITIVE_REGEN: { redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:-150,greenOffset:50,blueOffset:-15,alphaOffset:-100 },
	NEGATIVE_DPS:   { redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:255,greenOffset:255,blueOffset:255,alphaOffset:-60 },
	MAX_REGEN:      { redMultiplier:1,greenMultiplier:1,blueMultiplier:1,alphaMultiplier:1,redOffset:50,greenOffset:50,blueOffset:50,alphaOffset:-200 }
})

(def css $TextHealth ()
    (fontFamily = '$WWSDefaultFont')
    (extends $FontSizeDefault)
    (extends $FontColorWhite)
    (extends $BlockDropShadowFilter3)
)

(def css $TextHealthBold ()
    (fontFamily = '$WWSDefaultFontBold')
    (extends $FontSizeDefault)
    (extends $FontColorWhite)
    (extends $BlockDropShadowFilter3)
)



(def macro HEALTH_PERCENT_AND_ALIVE(entity:expression)
	(var healthComponent:gfx = "entity.health")
	(var maxHealth:number = "healthComponent.max")
	(var healthValue:number = "healthComponent.value" (event "healthComponent.evValueChanged"))
	(var healthPercent:number = "healthValue / maxHealth")
	(var isAlive:bool = "healthComponent.isAlive" (event "healthComponent.evIsAliveChanged"))
)

(def element OwnShipHealth() layout=true

	(scope
		(var stageWidth:number = 100px)
        (var stageHeight:number = 100px)

        (var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
        (var observedAvatarId:number = "cameraEntity.camera.observedAvatarId" (event "cameraEntity.camera.evObservedAvatarIdChanged"))

        (var observedAvatarEntity:gfx = "$datahub.getPrimaryEntity(CC.avatar, observedAvatarId)")

        (var entityId:number = "observedAvatarEntity &&
                                observedAvatarEntity.hasComponent(CC.health) &&
                                observedAvatarEntity.hasComponent(CC.vehicleInfo) ? observedAvatarEntity.id : 0"
                                (event "observedAvatarEntity.evAdded"))

		(var playerAvatarEntity:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
		(var playerAvatarId:number = "playerAvatarEntity.avatar.id")
		(var isSelfObserved:bool = "playerAvatarId == observedAvatarId")
	)
		
	(style
		(position = "absolute")
		(bind width "stageWidth")
		(bind height "stageHeight")
	)

	(controller $Instance renderer='OwnShipHealthContainer'
        (args __entityId="entityId" __isSelfObserved="isSelfObserved")
        (exprs
            (scope
                (bind entityId "entityId")
                (bind isSelfObserved "isSelfObserved")
            )
            (style
                (position = "absolute")
                (bind bottom "224")
                (bind left "11")
            )
        )
        (bind enabled "entityId")
    )
)
(def element OwnShipHealthContainer(__entityId:number, __isSelfObserved:bool) layout=true
	(scope
		(var entityId:number = "__entityId")
		(var isSelfObserved:bool = "__isSelfObserved")
	)
	
	(style
		(width = 220)
	)
	
	(hblock
		(style
			(width = 100%)
			(align = "center")
		)
		
		(element HotkeyIndicator "Cmd.CMD_SHIP_PARAMS" toggle=false fxOnDown=true
			(style
                (position = "absolute")
                (top = 0px)
                (left = -2px)
            )
            (bind visible "isSelfObserved")
		)
		
		
		(controller $Instance renderer='OwnHealthBar'
        	(args _entityId="entityId")
        	(bindcall recreate (bind trigger "entityId"))   		
        )
		
		

	)

	(hblock
		(style
			(marginLeft = -2px)
		)
		(element ShipLabel _entityId="entityId"
			(scope 
				(bind entityId "entityId")
			)
			(style
				(minWidth = 135)
			)
		)
		(element ShipHealthLabel _entityId="entityId"
			(scope (bind entityId "entityId"))
		)
	)
)

(def element ShipLabel(_entityId:number = 0, _shipInfoEntityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx = "$datahub.getEntity(entityId)")
		(var shipInfo:gfx = "$datahub.getEntity(entity.vehicleInfo.shipInfoEntityId)")
		(var levelRome:str = "shipInfo.ship.levelRome")
		(var nameIDS:str = "shipInfo.ship.nameIDS")
		
		(var subType:str = "shipInfo.ship.subtype")
        (var shipType:str = "toLower(subType)")
	)
	(name = 'ship_name')
	(style 
		(flow = "Flow.HORIZONTAL")
		(align = "middle")
	)

	(block
		(element HealthBarShipMarkerIconSimple _entityId="entityId" _shipType="shipType"
			(scope
				(bind entityId "entityId")	
				(bind shipType "shipType")
			)
		)
	)
	
	(tf 
		(class $TextHealthBold)
		(class $FontEnableReadability)
		(bind text "levelRome + ' ' + toUpper(tr(nameIDS))")
	)
)

(def element ShipHealthLabel (_entityId:number=0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")

		(macro HEALTH_PERCENT_AND_ALIVE "entity")
	)

	(style 
		(flow = 0)
		(align = "middle")
	)

	(tf 
		(class $TextHealthBold)
		(class $FontEnableReadability)
		(bind class "healthPercent > 0.8 ? '$FontColorHealth' : healthPercent > 0.3 ? '$FontColorWarning' : '$FontColorCritical'")
		(bind text "formatSeparator(healthValue)")
	)

	(tf 
		(style
			(marginLeft = -4px)
		)
		(alpha = 0.7)
		(class $TextHealth)
		(class $FontEnableReadability)
		(bind text "'/' + formatSeparator(maxHealth)")
	)
)

(def element OwnHealthBar (_entityId:number = 0) layout=true
    (name = 'vehicle_hp_text')
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx = "$datahub.getEntity(entityId)")

		(var isAlive:bool = "entity.health.isAlive" (event "entity.health.evIsAliveChanged"))
		
		(var shipInfo:gfx = "$datahub.getEntity(entity.vehicleInfo.shipInfoEntityId)")
        (var shortName:str = "shipInfo.ship.shortName")
		(var isSubmarine:bool = "shipInfo.ship.subtype == ShipTypes.SUBMARINE")
	)
	
	(style 
		(width = "BAR_IMAGE_WIDTH")
		(height = "BAR_IMAGE_HEIGHT")
	)
	
	
	(block
		(style 
			(width = "100%") (height = "100%") (position = "absolute")
            (backgroundSize = "crop")
            (bind backgroundImage "'url:../ship_bars/'  +  shortName  +  (isAlive  ?  '_h_bg.png'  :  '_h_bgdead.png')")
        )
	)

	(block
		(bind visible "isAlive")
		(class $FullsizeAbsolute)
		(element OwnHealthBarRegenInstance _entityId="entityId" (scope (bind entityId "entityId")))
		(element OwnHealthBarFX _entityId="entityId" (scope (bind entityId "entityId")))
	)

	(controller $Instance renderer = 'OwnHealthBarContentSubmarine'
		(bind enabled "isSubmarine")
		(args _entityId="entityId")
		(exprs
			(scope
				(bind entityId "entityId")
			)
		)		
	)
    
	(element OwnHealthBarValue _entityId="entityId" (scope (bind entityId "entityId")))

	(controller $Instance renderer = 'FireFloodBar'
		(bind enabled "isAlive")
		(args _entityId="entityId")
		(exprs
			(scope
				(bind entityId "entityId")
			)
		)		
	)
)

(def element OwnHealthBarContentSubmarine (_entityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")

		(var isAlive:bool = "entity.health.isAlive" (event "entity.health.evIsAliveChanged"))	
	)

	(bind visible "isAlive")
	(class $FullsizeAbsolute)

	(element OwnEnergyBarFX _entityId="entityId" (scope (bind entityId "entityId")))
	(element OwnEnergyBarValue _entityId="entityId" (scope (bind entityId "entityId")))
	(element OwnShipEnergyIndicator _entityId="entityId" (scope (bind entityId "entityId")))
)

(def element OwnHealthBarRegenInstance (_entityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")
	)
	(style
		(height = 100%)
		(width = 100%)
	)
	
	(controller $Instance renderer='OwnHealthBarRegen'
		(bind enabled "entity.hasComponent(CC.regeneration)")
		(args 
			_entityId="entityId"
		)
		(exprs
			(scope
				(bind entityId "entityId" )
			)
		)
	)
)

(def element OwnHealthBarRegen (_entityId:number = 0) layout=true
	(scope
		(var barImageWidth:number = "BAR_IMAGE_WIDTH")
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")

		(var shipInfo:gfx = "$datahub.getEntity(entity.vehicleInfo.shipInfoEntityId)")
		(var shortName:str = "shipInfo.ship.shortName")

		(var healthComponent:gfx = "entity.health")
        (var maxHealth:number = "healthComponent.max" (event "healthComponent.evValueChanged"))
		(var shipBarConfigLeft:number = "shipInfo.shipBarConfig.left")
		(var shipBarConfigRight:number = "shipInfo.shipBarConfig.right")
		(var barVisibleWidth:number = "barImageWidth - shipBarConfigRight - shipBarConfigLeft")

		(var regenComponent:gfx = "entity.regeneration" (event "entity.evAdded"))
		(var regenMaxValue:number = "regenComponent.maxValue" (event "regenComponent.evChanged"))
		(var regenValue:number = "regenComponent.value" (event "regenComponent.evChanged"))
		(var regenPercent:number = "regenMaxValue / maxHealth" (event "regenComponent.evChanged"))

		(var resultWidth:number = "ceil(barVisibleWidth * regenPercent + shipBarConfigLeft)")
		(var currentWidth:number = "resultWidth" watch=false)

		(controller $Animation
	        (bindcall play  duration = "HEALTH_ANI_MIN"
	                        killAll=true
	                        watch = false
	                        easing="Easing.quad_in"
	                        from = "{ currentWidth: currentWidth }"
	                        to = "{ currentWidth: resultWidth }"
	                        (event "regenComponent.evChanged")
	        )
	    )
	)

	(style 
		(bind width "currentWidth")
		(height = "100%")
		(position = "absolute")
		(backgroundSize = "crop")
		(bind backgroundImage "'url:../ship_bars/'  +  shortName  +  '_h.png'")
	)
	
	(bind colorTransform "regenValue > 0 ? SHIP_HP_TRANSFORM_COLORS.POSITIVE_REGEN : SHIP_HP_TRANSFORM_COLORS.MAX_REGEN")
) 

(def element OwnHealthBarFX(_entityId:number = 0) layout=true
	(scope
		(var barImageWidth:number = "BAR_IMAGE_WIDTH")
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")
		(var shipInfo:gfx = "$datahub.getEntity(entity.vehicleInfo.shipInfoEntityId)")
		(var shortName:str = "shipInfo.ship.shortName")

		(var shipBarConfigLeft:number = "shipInfo.shipBarConfig.left")
        (var shipBarConfigRight:number = "shipInfo.shipBarConfig.right")
        (var barVisibleWidth:number = "barImageWidth - shipBarConfigRight - shipBarConfigLeft")

		(macro HEALTH_PERCENT_AND_ALIVE "entity")

		(var resultWidth:number = "ceil(barVisibleWidth * healthPercent + shipBarConfigLeft)")
		(var healthDelta:number = "healthComponent.delta" (event "healthComponent.evDeltaChanged"))

		(var currentWidth:number = "resultWidth" watch=false)

		(controller $Animation
			(bindcall play  delay = "healthDelta >=0 ? 0 : HEALTH_ANI_DELAY"
	                        duration = "healthDelta >=0 ? HEALTH_ANI_DELAY : min(HEALTH_ANI_MAX, max(HEALTH_ANI_MIN, abs(healthDelta/maxHealth)*10))"
							killAll=true
							watch = false
							easing="Easing.quad_in"
							from = "{ currentWidth: currentWidth }"
                            to = "{ currentWidth: resultWidth }"
                            (event "healthComponent.evChanged")
			)
		)
	)

	(style 
		(bind width "currentWidth")
		(height = "100%")
		(position = "absolute")
		(backgroundSize = "crop")
        (bind backgroundImage "'url:../ship_bars/'  +  shortName  +  '_h.png'")
	)
	
	(bind colorTransform "healthDelta >= 0 ? SHIP_HP_TRANSFORM_COLORS.POSITIVE_REGEN : SHIP_HP_TRANSFORM_COLORS.WHITE")
)

(def element OwnHealthBarValue (_entityId:number = 0) layout=true
	(scope
		(var barImageWidth:number = "BAR_IMAGE_WIDTH")
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")
		(var shipInfo:gfx = "$datahub.getEntity(entity.vehicleInfo.shipInfoEntityId)")
		(var shortName:str = "shipInfo.ship.shortName")

		(var shipBarConfigLeft:number = "shipInfo.shipBarConfig.left")
        (var shipBarConfigRight:number = "shipInfo.shipBarConfig.right")
        (var barVisibleWidth:number = "barImageWidth - shipBarConfigRight - shipBarConfigLeft")

		(macro HEALTH_PERCENT_AND_ALIVE "entity")

		(var resultWidth:number = "ceil(barVisibleWidth * healthPercent + shipBarConfigLeft)")
        (var healthDelta:number = "healthComponent.delta" (event "healthComponent.evDeltaChanged"))

        (var currentWidth:number = "resultWidth" watch=false)

        (controller $Animation
            (bindcall play
                            delay= "healthDelta >=0 ? HEALTH_ANI_DELAY : 0"
                            duration = "healthDelta >=0 ? HEALTH_ANI_MAX : HEALTH_ANI_MIN"
                            killAll=true
                            watch = false
                            easing="Easing.quad_in"
                            from = "{ currentWidth: currentWidth }"
                            to = "{ currentWidth: resultWidth }"
                            (event "healthComponent.evChanged")
            )
        )
	)

	(style
		(bind width "currentWidth")
		(height = "100%")
		(position = "absolute")
		(backgroundSize = "crop")
		(bind backgroundImage "'url:../ship_bars/'  +  shortName  +  '_h.png'")
	)

	(bind colorTransform "healthPercent > 0.8 ? SHIP_HP_TRANSFORM_COLORS.GREEN : healthPercent > 0.3 ? SHIP_HP_TRANSFORM_COLORS.YELLOW : SHIP_HP_TRANSFORM_COLORS.RED")
)


(def element OwnEnergyBarFX(_entityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")
		(var shipInfoEntityId:number = "entity ? entity.vehicleInfo.shipInfoEntityId : 0")
        
		(var shipInfo:gfx = "$datahub.getEntity(shipInfoEntityId)")
		(var shortName:str = "shipInfo.ship.shortName")
		
		(var shipBarConfigLeft:number = "shipInfo.shipBarConfig.left")
		(var shipBarConfigRight:number = "shipInfo.shipBarConfig.right")
		(var barVisibleWidth:number = "BAR_IMAGE_WIDTH - shipBarConfigRight - shipBarConfigLeft")

		(var energyComponent:gfx = "entity.energy")
		(var energyValue:number = "energyComponent.value" (event "energyComponent.evValueChanged"))
		(var energyDelta:number = "energyComponent.delta" (event "energyComponent.evDeltaChanged"))
		(var energyMax:number = "energyComponent.max")
		(var energyPercent:number = "energyValue / energyMax")

		(var resultWidth:number = "ceil(barVisibleWidth * energyPercent + shipBarConfigLeft)")
		(var currentWidth:number = "resultWidth" watch=false)
		(var deltaWidth:number = "abs(resultWidth - currentWidth)")
		(var energySpendAnimTemp:number = "0")
		(bind energySpendAnimTemp "10" init=false (event "energyComponent.evEnergySpended"))
		(var energySpendAnimInProgress:bool = "energySpendAnimTemp != 0")

		(controller $Animation
			(bindcall play  delay = "HEALTH_ANI_DELAY"
							duration = "min(HEALTH_ANI_MAX, max(HEALTH_ANI_MIN, abs(energyDelta/energyMax)*10))"
							easing="Easing.quad_in"
							to = "{ currentWidth: resultWidth, energySpendAnimTemp: 0 }"
							watch=false
							killAll=true
							(event "energyComponent.evEnergySpended")
			)
			(bindcall play  duration = "HEALTH_ANI_MIN"
							easing="Easing.quad_in"
							to = "{ currentWidth: resultWidth }"
							watch=false
							killAll=true
							(bind trigger "resultWidth")
							(bind enabled "!(energySpendAnimInProgress)")
			)
		)
	)

	(style 
		(bind width "currentWidth")
		(height = "100%")
		(position = "absolute")
		(backgroundSize = "crop")
		(bind backgroundImage "'url:../ship_bars/' + shortName + '_e.png'")
	)
	
	(bind colorTransform "deltaWidth < 3 	? SHIP_HP_TRANSFORM_COLORS.POSITIVE_REGEN 
											: SHIP_HP_TRANSFORM_COLORS.WHITE")
)

(def element OwnEnergyBarValue (_entityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")
		(var shipInfoEntityId:number = "entity ? entity.vehicleInfo.shipInfoEntityId : 0")

		(var shipInfo:gfx = "$datahub.getEntity(shipInfoEntityId)")
		(var shortName:str = "shipInfo.ship.shortName")

		(var shipBarConfigLeft:number = "shipInfo.shipBarConfig.left")
		(var shipBarConfigRight:number = "shipInfo.shipBarConfig.right")
		(var barVisibleWidth:number = "BAR_IMAGE_WIDTH - shipBarConfigRight - shipBarConfigLeft")

		(var energyComponent:gfx = "entity.energy")
		(var energyValue:number = "energyComponent.value" (event "energyComponent.evValueChanged"))
		(var energyDelta:number = "energyComponent.delta" (event "energyComponent.evDeltaChanged"))
		(var energyMax:number = "energyComponent.max")
		(var energyPercent:number = "energyValue / energyMax")

		(var pingerGunEntity:gfx = "$datahub.getPrimaryEntity(CC.weapon, WeaponType.PINGER)")
		(var selectedIndex:number = "pingerGunEntity.weaponControl.selectedIndex" (event "pingerGunEntity.weaponControl.evSelectedIndexChanged"))
		(var pingEnergyCost:number = "pingerGunEntity.weaponControl.ammoTypes[selectedIndex]")
		(var isDangerLevel:bool = "energyValue < pingEnergyCost")

		(var resultWidth:number = "ceil(barVisibleWidth * energyPercent + shipBarConfigLeft)")
		(var currentWidth:number = "resultWidth" watch=false)
		(var deltaWidth:number = "abs(resultWidth - currentWidth)")

		(controller $Animation
			(bindcall play 	delay = "deltaWidth > 3 ? 0 : HEALTH_ANI_DELAY"
							duration = "deltaWidth < 3 ? HEALTH_ANI_MAX : HEALTH_ANI_MIN"
							easing="Easing.quad_in"
							to = "{ currentWidth: resultWidth }"
							watch=false
                            killAll=true
							(bind trigger "resultWidth")
			)
		)
	)

	(style 
		(bind width "currentWidth")
		(height = "100%")
		(position = "absolute")
		(backgroundSize = "crop")
		(bind backgroundImage "'url:../ship_bars/' + shortName + '_e.png'")
	)
	
	(bind colorTransform "isDangerLevel ? SHIP_HP_TRANSFORM_COLORS.RED
										: SHIP_HP_TRANSFORM_COLORS.NONE ")
)

(def element OwnShipEnergyIndicator (_entityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")

		(var energyComponent:gfx = "entity.energy")
		(var energyValue:number = "energyComponent.value" (event "energyComponent.evValueChanged"))
		(var energyMax:number = "energyComponent.max")
		(var energyPercent:number = "energyValue / energyMax")

		(var pingerGunEntity:gfx = "$datahub.getPrimaryEntity(CC.weapon, WeaponType.PINGER)")
		(var selectedIndex:number = "pingerGunEntity.weaponControl.selectedIndex" (event "pingerGunEntity.weaponControl.evSelectedIndexChanged"))
		(var pingEnergyCost:number = "pingerGunEntity.weaponControl.ammoTypes[selectedIndex]")
		(var isDangerLevel:bool = "energyValue < pingEnergyCost")

		(var iconType:str = "isDangerLevel 	? 'red'
											: 'white'")
	)

	(style
		(position = "absolute")
		(bottom = 2)
		(width = 22)
		(height = 22)
		(bind backgroundImage "'url:../battle_hud/own_ship_health/energy/icon_energy_' + iconType + '.png'")
	)

	(controller $FxInstance lifetime="1"
		(bind renderer 'OwnShipEnergyIndicatorFX')
		(bind enabled "isDangerLevel")
		(bindcall create (bind trigger "isDangerLevel"))
	)
)

(def element OwnShipEnergyIndicatorFX () layout=true
	(scope
		(event evAddedToStage)
	)
	(dispatch evAddedToStage on='addedToStage')

	(style
		(position = "absolute")
		(top = 50%) (left = 50%)
	)
	(block
		(style
			(width = 22) (height = 22)
			(marginTop = -50%) (marginLeft = -50%)
			(bind backgroundImage "'url:../battle_hud/own_ship_health/energy/icon_energy_red.png'")
		)
	)
	(controller $Animation
		(bindcall play 	duration = 0.35
						easing="Easing.quad_in"
						from = "{ alpha: 1, scaleX: 1, scaleY: 1 }"
						to = "{ alpha: 0, scaleX: 2.5, scaleY: 2.5 }"
						(event "evAddedToStage")
		)
	)
)


(def element FireFloodBar (_entityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx =  "$datahub.getEntity(entityId)")
	)
	
	(style
		(left = "-13px")
		(top = "12px") 
	)

	(class $FullsizeAbsolute)

	(controller $Repeat renderer = 'FireItem'
		(bind count "entity.burnModule.coordArray.length")
		(args _entityId = "entityId")
		(exprs
			(scope
				(bind entityId "entityId")
			)
		)
	)

	(controller $Repeat renderer = 'FloodItem'
		(bind count "entity.floodModule.coordArray.length")
		(args _entityId = "entityId")
		(exprs
			(scope
				(bind entityId "entityId")
			)
		)
	)

)

(def element FireItem (_entityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx = "$datahub.getEntity(entityId)")
		(var shipInfo:gfx = "$datahub.getEntity(entity.vehicleInfo.shipInfoEntityId)")

		(var barLeft:number = "shipInfo.shipBarConfig.left")
		(var barSize:number = "BAR_IMAGE_WIDTH - shipInfo.shipBarConfig.right - shipInfo.shipBarConfig.left")
		(var burnPos:number = "entity.burnModule.coordArray[$index]")
		(var burnFlag:number = "entity.burnModule.burnFlag" (event "entity.burnModule.evBurnFlagChanged"))

		(var enabled:bool = "burnFlag & (1 << $index)")
	)
	(bind name "'fireNodeIndicator_HP_Fire_Burn_' + ($index + 1)")

	(style 
		(position = "absolute")
		(width = "26px")
		(height = "26px")
		(bind left "barLeft + (barSize * burnPos)")
		(backgroundImage = 'bitmap:icon_fire_small')
		
		(top = "enabled ? 0 : 6")
	)
	(scaleX = "FIRE_ICON_SCALE")
	(scaleY = "FIRE_ICON_SCALE")
	
	(visible = "enabled")
	(alpha = "enabled")
    
	(controller $Animation
		(bindcall play  duration = 0.3 
						from = { visible:0, alpha:0, top:6px }
						to = { visible:1, alpha:1, top:0px } 
						(bind enabled "enabled")
		)
		(bindcall play  duration = 0.3 
						from = { visible:1 }
						to = { visible:0, alpha:0 } 
						(bind enabled "!enabled")
		)
	)
)

(def element FloodItem (_entityId:number = 0) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var entity:gfx = "$datahub.getEntity(entityId)")
		(var shipInfo:gfx = "$datahub.getEntity(entity.vehicleInfo.shipInfoEntityId)")

		(var barLeft:number = "shipInfo.shipBarConfig.left")
		(var barSize:number = "BAR_IMAGE_WIDTH - shipInfo.shipBarConfig.right - shipInfo.shipBarConfig.left")
		(var pos:number = "entity.floodModule.coordArray[$index]")
		(var burnFlag:number = "entity.floodModule.burnFlag" (event "entity.floodModule.evBurnFlagChanged"))

		(var enabled:bool = "burnFlag & (1 << $index)")
	)

	(style
		(position = "absolute")
		(width = "27px")
		(height = "27px")
		(top = "enabled ? 22 : 28")
		(bind left "barLeft + (barSize * pos)")
		(backgroundImage = 'bitmap:icon_personal_lock_flooding')

	)

	(visible = "enabled")
	(alpha = "enabled")

	(controller $Animation
		(bindcall play  duration = 0.3
						from = { visible:0, alpha:0, top:28px }
						to = { visible:1, alpha:1, top:22px }
						(bind enabled "enabled")
		)
		(bindcall play  duration = 0.3
						from = { visible:1 }
						to = { visible:0, alpha:0 }
						(bind enabled "!enabled")
		)
	)
)

(def element HealthBarShipMarkerIconSimple(_entityId:number, _shipType:str) layout=true
	(scope
		(var entityId:number = "_entityId")
		(var shipType:str = "_shipType")
		(var entity:gfx = "$datahub.getEntity(entityId)")
		
		(var icon:str = "RELATION_NAMES.OWN + '_' + shipType + '_small'")
	)
	(bind name "icon")
	(block
		(style
			(width = "21px")
			(height = "11px")
			(bind backgroundImage "'bitmap:' + icon")
		)
	)
)