(def constant DEATH_LOG_BUILDING_ICONS	{ 'AntiAircraft': 'icon_ground_air_defence',
										  'CoastalArtillery': 'icon_ground_artillery_type_1',
										  'SensorTower': 'icon_ground_radar',
										  'Complex': 'icon_ground_artillery_type_1',
										  'AirBase': 'icon_ground_airbase'
										})

(def constant DEATH_LOG_BUILDING_ICONS_W	{ 'AntiAircraft': 13px,
											  'CoastalArtillery': 11px,
											  'SensorTower': 13px,
											  'Complex': 13px,
											  'AirBase': 17px
											})

(def constant DEATH_LOG_BUILDING_ICONS_H	{ 'AntiAircraft': 17px,
											  'CoastalArtillery': 15px,
											  'SensorTower': 15px,
											  'Complex': 15px,
											  'AirBase': 17px
											})

(def constant DEATH_LOG_COLOR_CLASSES       {   'ally'    : '$TextColorAlly',
												'enemy'   : '$TextColorEnemy',
												'division': '$TextColorAlly',
												'neutral' : '$TextColorNeutral'
											})

(def constant DEATH_LOG_MESSAGE_ALPHA_DURATION 0.3)
(def constant DEATH_LOG_MESSAGE_HIDE_DELAY 10)
(def constant DEATH_LOG_MESSAGE_LIFETIME "DEATH_LOG_MESSAGE_HIDE_DELAY + DEATH_LOG_MESSAGE_ALPHA_DURATION*2")


(def element ShipBlock(entity:gfx, colorClass:str) layout=true
	(scope
		(var isBuilding:bool = "entity.hasComponent(CC.building)")
		(var isDiplomacyEnemy:bool = "entity.hasComponent(CC.diplomacyRelation) && entity.diplomacyRelation.value == SC.Battle.DIPLOMACY_RELATIONS.ENEMY")
		(var playerDisplayName:str = "isBuilding || isDiplomacyEnemy ? '' : entity.avatar.name")
		(var entityDisplayName:str = "toUpper(	isBuilding 			? entity.building.typeIDS :
												isDiplomacyEnemy	? tr(entity.avatar.ship.ref.ship.nameIDS)
																	: entity.avatar.ship.ref.ship.levelRome + ' ' + tr(entity.avatar.ship.ref.ship.nameIDS))")
		(var entityType:str = "isBuilding ? entity.building.type : entity.avatar.ship.ref.ship.subtype")
		(var isAlly:bool = "entity.relation.value <= 1")
		(var iconName:str = "isBuilding ? (DEATH_LOG_BUILDING_ICONS[entityType] + (isAlly ? '_ally' : '_enemy')) : ((isAlly ? 'ally_' : 'enemy_') + toLower(entityType) + '_small')")
	)
	(hblock
		(style
			(align = "middle")
		)
		(tf
			(class $TextDeathLog)
			(bind class "colorClass")
			(text = "playerDisplayName")
		)
		(block
			(bind visible "!isDiplomacyEnemy")
			(style
				(width = "isBuilding ? DEATH_LOG_BUILDING_ICONS_W[entityType] : (entityType == 'Destroyer' ? 17px : 21px)")
				(height = "isBuilding ? DEATH_LOG_BUILDING_ICONS_H[entityType] : 11px")
				(marginRight = 2px)
				(marginLeft = 2px)
				(backgroundImage = "'bitmap:' + iconName")
			)
		)
		(tf
			(class $TextDeathLog)
			(bind class "colorClass")
			(text = "entityDisplayName")
		)
	)
)

(def element DeathLogContainer() layout=true dispatch_size_change=true
    (scope
        (var feedbackCollection:gfx = "$datahub.getCollection(CC.feedbackComponent)")
		(var feedbackEntity:gfx = "feedbackCollection.items[0]")
    )

	(name = 'DeathLogContainer')

	(style 
        (position = "absolute")
        (align = "right|bottom")
        
        (height = "22*3")
        (width = "400")
    )

	(block
		(style
			(align = "right")
		)
	    (controller $FxInstance renderer='DeathLogMessage' lifetime="DEATH_LOG_MESSAGE_LIFETIME"
	        (args eventData = "$event[1]")
	        (bindcall create (event "feedbackEntity.feedbackComponent.evDeathLog"))
	    )
    )
)


(def element DeathLogMessage (eventData:dict) layout=true
    (scope
        (var hasKiller:bool = "eventData.info.killer != null")
        (var killerEntity:gfx = "hasKiller ? $datahub.getEntity(eventData.info.killer) : null")
        (var killerRelation:number = "hasKiller ? killerEntity.relation.value : 0")

		(var isSelfKiller:bool = "killerRelation == 0")
        (var isInSameDivisionKiller:bool = "hasKiller ? killerEntity.avatar.isInSameDivision : false")
        (var killerRelationStr:str = "killerRelation <= 1 ? (isInSameDivisionKiller || isSelfKiller ? 'division' : 'ally') : killerRelation == 2 ? 'enemy' : 'neutral'")

        (var hasVictim:bool = "eventData.info.victim != null")
        (var victimEntity:gfx = "hasVictim ? $datahub.getEntity(eventData.info.victim) : null")
        (var victimRelation:number = "hasVictim ? victimEntity.relation.value : 0")
		(var isSelfVictim:bool = "victimRelation == 0")
        (var isInSameDivisionVictim:bool = "hasVictim ? victimEntity.avatar.isInSameDivision : false")
        (var victimRelationStr:str = "victimRelation <= 1 ? (isInSameDivisionVictim || isSelfVictim ? 'division' : 'ally') : victimRelation == 2 ? 'enemy' : 'neutral'")

        (var weaponIcon:str = "eventData.info.weaponIcon")
    )

	(style
		
		
	)
    (hblock
        (controller $Animation            
            (play
                duration="DEATH_LOG_MESSAGE_ALPHA_DURATION"
                from={alpha: 0.0, height: 0 }
                to={alpha: 1, height: 21 }
            )
    
            (play
                duration="DEATH_LOG_MESSAGE_ALPHA_DURATION"
                delay="DEATH_LOG_MESSAGE_HIDE_DELAY"
                from={alpha: 1}
                to={alpha: 0.0 }
            )
        )
		
        (element ShipBlock "killerEntity" "DEATH_LOG_COLOR_CLASSES[killerRelationStr]" $enabled="hasKiller")
    
        (block
            (style 
                (width = 21px)
                (height = 21px)
                (marginLeft = 2px)
                (marginRight = 2px)
                (backgroundImage = "'bitmap:' + weaponIcon")
            )
        )
    
        (element ShipBlock "victimEntity" "DEATH_LOG_COLOR_CLASSES[victimRelationStr]" $enabled="hasVictim")
    )
)
