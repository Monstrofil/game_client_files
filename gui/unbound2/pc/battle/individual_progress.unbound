(def constant PROGRESS_BAR_WIDTH 190)

(def constant GatherBlockReasons "{
	NONE: 0,
	ENEMY: 1,
	SPEED: 2,
	FIRE: 3,
	FLOOD: 4
}")

(def constant RESOURCE_BAR_SETTINGS "{
    '1': {
        barIcon: 'icon_resource_survivor_small',
        barColor: 0xFF4CE8AA,
        loadingIDS: 'IDS_RESCUING',
        unloadingIDS: 'IDS_UNLOADING',
        holdingIDS: 'IDS_TRANSPORTING'
    },
    '2': {
        barIcon: 'icon_resource_survivor_small',
        barColor: 0xFF4CE8AA,
        loadingIDS: 'IDS_RESCUING',
        unloadingIDS: 'IDS_UNLOADING',
        holdingIDS: 'IDS_TRANSPORTING'
    },
    '3': {
        barIcon: 'icon_resource_filthior_small',
        barColor: 0xFF4CE8AA,
        loadingIDS: 'IDS_RESOURCE_LOADING',
        unloadingIDS: 'IDS_UNLOADING',
        holdingIDS: 'IDS_IN_THE_HOLD'
    }
}")

(def element IndividualProgressContainer () layout=true dispatch_size_change=true
    (scope
        (var avatar:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
        (var isAlive:bool = "avatar.health.isAlive" (event "avatar.health.evIsAliveChanged"))
    
        (var stageComponent:gfx = "$datahub.getSingleComponent(CC.stage)")
		(var stageHeight:number = "stageComponent.height" (event "stageComponent.evStageSizeChanged"))
	)

	(style
		(bind paddingTop "stageHeight >= 1080 ? -64px : 0")
	)
    
    (controller $Instance renderer='ResourcesGatherProgressBarWrapper'
        (bind enabled "isAlive")
    )
)

(def element ResourcesGatherProgressBarWrapper () layout=true
    (scope
        (var avatar:gfx = "$datahub.getSingleEntity(CC.playerAvatar)")
        (var resourcesCollection:gfx = "$datahub.getCollection(CC.resource)")
        (var playerResources:gfx = "resourcesCollection.getChildByPath('byOwnerId.' + avatar.id)" (event "resourcesCollection.evAdded"))
    )

    (controller $Repeat renderer='ResourcesGatherProgressBar' layout=false
        (bind count "playerResources.items.length")
        (args
            collection = "playerResources"
        )
    )
)

(def element ResourcesGatherProgressBar (collection:gfx) layout=true
    (scope
        (var resourceEntity:gfx = "collection.items[$index]")
        (var resourceType:str = "resourceEntity.resource.type")
        (var resourceBarSettings:dict = "RESOURCE_BAR_SETTINGS[resourceType]")

        
        (var progressComponent:gfx = "resourceEntity.progress")
        (var min:number = "progressComponent.min" (event "progressComponent.evChanged"))
        (var max:number = "progressComponent.max" (event "progressComponent.evChanged"))
        (var value:number = "progressComponent.value" (event "progressComponent.evChanged"))

        
        (var playerInsideZones:gfx = "$datahub.getCollection(CC.interactiveZone).getChildByPath('playerInside.byResourceType.' + resourceType)")
        (var resourceZone:gfx = "playerInsideZones.items[0]" (event "playerInsideZones.evAdded") (event "playerInsideZones.evRemoved"))
        (var playerIsInsideZone:bool = "resourceZone != null")
        (var resourceHolder:gfx = "resourceZone ? resourceZone.resourceHolder : null")
        (var gatherLocked:bool = "resourceHolder.gatherLocked" (event "resourceHolder.evGatherLockedChanged"))
        (var lockReason:number = "resourceHolder.lockReason" (event "resourceHolder.evLockReasonChanged"))
        (var lockReasonIcon:str = "lockReason == GatherBlockReasons.SPEED   ? 'speed_limit' :
                                    lockReason == GatherBlockReasons.FIRE   ? 'fire' 
                                                                            : 'flooding'")

        (var canGather:bool = "playerIsInsideZone && !(gatherLocked)")

        
        (var globalVisible:bool = "canGather || (progressComponent && resourceType != ResourceTypes.FILTHIOR_SAVED)")
    )
    (bind visible "globalVisible")
    (controller $Animation
        (bindcall play  duration=0.15
                        from="{ alpha: 0 }"
                        to="{ alpha: 1 }"
                        killAll=true
                        reverse="!(globalVisible)"
                        (bind trigger "globalVisible")
        )
    )

    (style (align = "center"))

    (block
        (style (align = "center"))
        (tf
            (class $TextDefaultBoldNM)
            (style (marginBottom = "4px"))
            (bind text "canGather   ? resourceHolder.loading    ? resourceBarSettings.loadingIDS
                                                                : resourceBarSettings.unloadingIDS
                                    : resourceBarSettings.holdingIDS")
        )
        (hblock
            (tf
                (class $TextDefaultBoldNM)
                (style (marginRight = 0))
                (bind text "value")
            )
            (tf
                (alpha = 0.8)
                (class $TextDefaultNM)
                (bind text "'/' + max")
            )
        )
    )

    (block

        (block
            (style
                (position = "absolute")
                (left = "-28px") (top = "-8px")
                (width = "26px") (height = "26px")
                (bind backgroundImage "'bitmap:' + resourceBarSettings.barIcon")
            )
        )

        (element SimpleProgressBar
            (style
                (marginTop = "3px")
                (marginLeft = "6px")
            )
            (scope
                (bind max "max")
                (bind value "value")
                (bind color "resourceBarSettings.barColor")
            )

            
            (block
                (bind alpha "lockReason > 0 ? 1 : 0")
                (style 
                    (position = "absolute")
                    (top = "-11px")
                    (bind left "value / max * PROGRESS_BAR_WIDTH - 11")
                    (width = "27px")
                    (height = "27px")
                    (bind backgroundImage "'bitmap:icon_personal_lock_' + lockReasonIcon")
                )
            )
        ) 
    )
)

(def element SimpleProgressBar () layout=true
    (scope
        (var max:number = "1")
        (var value:number = "0")

        (var barWidth:number = "PROGRESS_BAR_WIDTH")
        (var color:number = "0xFFFFFF00")
    )

    (style
        (width = "barWidth")
        (height = "4px")
        (backgroundImage = "'bitmap:bar_bg'")
        (backgroundSize = "cover")
    )

    (block
        (style 
            (position = "absolute")
            (top = "1px")
            (left = "1px")
            (height = "2px")
            (width = "barWidth - 2")
            (bind backgroundColor "color")
        )
        (bind scaleX "value / max")
    )
)

