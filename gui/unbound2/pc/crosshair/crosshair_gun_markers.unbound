(def element CrosshairGunMarkersContainer() layout=true
	(scope
		(var markers:gfx = "$datahub.getCollection(CC.gunMarker)")
	)
    (style (position = "absolute"))

    (controller $Repeat renderer='GunMarkerRenderer'
        (bind count "markers.items.length")
        (args markerID = "markers.items[$index].id")
    )
)

(def element GunMarkerRenderer(markerID:number) layout=true
    (scope
        (event emptyEvent)
        (event evShoot)

        
        (var marker:gfx = "$datahub.getEntity(markerID)")
        (var state:number = "marker.gunMarker.state" (event "marker.gunMarker.evStateChanged"))
        (var index:number = "marker.gunMarker.index" (event "marker.gunMarker.evIndexChanged"))

        
        (var progress:number = "marker.progress.max != 0 ? marker.progress.value / marker.progress.max : 0" (event "marker.progress.evChanged"))

        
        (var azimuth:number = "radToGrad(marker.gunTarget.azimuth)" (event "marker.gunTarget.evAzimuthChanged"))
        (var isBlocked:bool = "marker.gunTarget.invalid" (event "marker.gunTarget.evInvalidChanged"))
        (var isCentral:bool = "index == 0")
        (var isAimed:bool = "azimuth == 0")

        
        (var isActive:bool = "marker.gunMarker.active" (event "marker.gunMarker.evActiveChanged"))
        (var position:number = "marker.gunMarker.position" (event "marker.gunMarker.evPositionChanged"))
        (var isVisible:bool = "marker.gunMarker.visible" (event "marker.gunMarker.evVisibleChanged"))
    )

    (style (position = "absolute"))

    (bind visible "isActive && isVisible && state < SC.Weapons.GUN_STATE.DESTROYED && (isCentral || !isAimed)")

    (dispatch evShoot dir="EventDirection.DOWN" (event "isCentral ? marker.weapon.evShoot : emptyEvent"))

    (block
        (style (bind left "position") (position = "absolute"))

        

        (hblock
            (element GunMarker _index="index"
                (scope
                    (bind _azimuth "azimuth")
                    (bind _state "state")
                    (bind _blocked "isBlocked")
                    (bind _progress "progress")
                )
            )
        )
    )
)



(def element PingerGunCentralMarker() layout=true
	(scope
		(var isEnabled:bool = false)

		(event emptyEvent)
		(event evShoot)
		(var currentWeapon:gfx = "$datahub.getPrimaryEntity(CC.weapon, WeaponType.PINGER)")

		(var centralMarker:gfx = "currentWeapon.centralGunMarker")
		(var isVisible:bool = "centralMarker.isVisible" (event "centralMarker.evIsVisibleChanged"))
		(var markerState:number = "centralMarker.markerState" (event "centralMarker.evMarkerStateChanged"))
		(var reloadState:number = "centralMarker.reloadState" (event "centralMarker.evReloadStateChanged"))

		(var countdown:gfx = "currentWeapon && currentWeapon.hasComponent(CC.countDown) ? currentWeapon.countDown : null" (event "currentWeapon.evAdded") (event "currentWeapon.evRemoved"))
		(var remainTime:number = "countdown ? countdown.remain : 0" (event "countdown.evRemainChanged"))
		(var reloadPercent:number = "countdown ? 1 - remainTime / countdown.duration : 1")
		(var gunScreenX:number = "centralMarker.screenX" (event "evEnterFrame"))
	)

	(dispatch evShoot dir="EventDirection.DOWN" (event "currentWeapon.weapon.evShoot"))

	(style (position = "absolute") (bind left "gunScreenX"))

	(bind visible "isEnabled && isVisible")

	(element GunMarker 	_hasText=false
						_backgroundMC='crosshair_gun_marker_rect_background'
						_markerMC='crosshair_gun_marker_rect'
						_shootAnimMC='crosshair_gun_marker_rect_shoot_anim'
		(style (position = "absolute"))
			(scope
				(bind _markerState "markerState")
				(bind _reloadPercent "reloadPercent")
			)
	)
)

(def constant PINGER_GUN_STATES_SIZES [
	[320, 240], 
	[240, 160] 
])

(def element PingerGunStateCentralMarker() layout=true
	(scope
		(var isEnabled:bool = false)

		(var weaponEntity:gfx = "$datahub.getPrimaryEntity(CC.weapon, WeaponType.PINGER)")
		(var selectedIndex:number = "isEnabled ? weaponEntity.weaponControl.selectedIndex : 0" (event "weaponEntity.weaponControl.evSelectedIndexChanged"))

		(var currentSizes:array = "PINGER_GUN_STATES_SIZES[selectedIndex]")
		(var currentWidth:number = "currentSizes[0]")
		(var currentHeight:number = "currentSizes[1]")
	)

	(style
		(position = "absolute")
		(top = -150) (left = -150)
		(width = 300) (height = 300)
		(align = "center|middle")
	)

	(bind visible "isEnabled")

	(block
		(alpha = 0)
		(style
			(width = "currentWidth")
			(height = "currentHeight")
		)

		(controller $Animation
			(bindcall play	duration=0.15
							from="{width: currentWidth+60, height: currentHeight+40, alpha: 0}"
							to="{width: currentWidth, height: currentHeight, alpha: 1}"
							killAll=true
							reverse="!(isEnabled)"
							(bind trigger "isEnabled")
			)
			(bindcall play	duration=0.15
							to="{width: currentWidth, height: currentHeight}"
							killAll=true
							(event "weaponEntity.weaponControl.evSelectedIndexChanged")
			)
		)

		
		(block
			(style
				(position = "absolute") (top = 0) (left = 0) (width = 30) (height = 30)
				(backgroundImage = "'url:../battle_hud/crosshair/pinger_gun/pinger_state_edge_top_left.png'")
			)
		)

		
		(block
			(style
				(position = "absolute") (top = 0) (right = 0) (width = 30) (height = 30)
				(backgroundImage = "'url:../battle_hud/crosshair/pinger_gun/pinger_state_edge_top_right.png'")
			)
		)

		
		(block
			(style
				(position = "absolute") (bottom = 0) (left = 0) (width = 30) (height = 30)
				(backgroundImage = "'url:../battle_hud/crosshair/pinger_gun/pinger_state_edge_bottom_left.png'")
			)
		)

		
		(block
			(style
				(position = "absolute") (bottom = 0) (right = 0) (width = 30) (height = 30)
				(backgroundImage = "'url:../battle_hud/crosshair/pinger_gun/pinger_state_edge_bottom_right.png'")
			)
		)
	)
)
