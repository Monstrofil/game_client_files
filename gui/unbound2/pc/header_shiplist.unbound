(def constant HeaderShip_ItemOffset 6)	# 10
(def constant HeaderShip_ItemWidth 26)	# 20 + 6
(def constant HeaderShip_ContainerHeight 20)
(def constant HeaderShip_ItemDuration 0.15)
(def constant HeaderShip_ItemDelay 0.15)
(def constant HeaderShip_ItemDoubleDelay 0.3)

#(def constant HeaderShip_ItemDuration 2.0)
#(def constant HeaderShip_ItemDelay 2.0)
#(def constant HeaderShip_ItemDoubleDelay 4.0)

(def constant HEADER_SHIP_ICON { WIDTH:20, HEIGHT:11 })
(def constant HEADER_TEAMS_DISTANCE 55)

(def element HeaderShipList() layout=true
	(scope
		(var stageWidth:number = 100px)
		(var stageHeight:number = 100px)      
	# collection
		(var collection:gfx = "$datahub.getCollection(CC.avatar)")
		(var allyCollection:gfx = "collection.getChildByPath('team.ally.sortedLeftTeam')")
		(var enemyCollection:gfx = "collection.getChildByPath('team.enemy.sortedRightTeam')")
		(var allyLeftPadding:number = "allyCollection.items.length < enemyCollection.items.length 
			? (enemyCollection.items.length - allyCollection.items.length) * HeaderShip_ItemWidth
			: 0")
		(var enemyRightPadding:number = "allyCollection.items.length > enemyCollection.items.length 
			? (allyCollection.items.length - enemyCollection.items.length) * HeaderShip_ItemWidth
			: 0")
		(var allyItemsWidth:number = "allyCollection.items.length * HeaderShip_ItemWidth - HeaderShip_ItemOffset")
		(var enemyItemsWidth:number = "enemyCollection.items.length * HeaderShip_ItemWidth - HeaderShip_ItemOffset")
	# gameModeId
		(var battleDataEntityCollection:gfx = "$datahub.getCollection(CC.battleData)")
		(var battleDataEntity:gfx = "battleDataEntityCollection.items[0]")
		(var battleInfoComponent:gfx = "battleDataEntity.battleInfo")
		(var gameModeId:number = "battleInfoComponent.gameModeId")
	)

	(style
		(position = "absolute")
		(bind width "stageWidth")
		(bind height "stageHeight")
		(paddingTop = 15) 
		(align = "center")
	)

	(bind visible "gameModeId != GameMode.TUTORIAL")

	# PVE - show only allies
	(controller $Instance renderer='HeaderShipListAllyOnly'
		(args allyCollection="allyCollection" allyItemsWidth="allyItemsWidth")
		(bind enabled "gameModeId == GameMode.PVE")
	)
	
	# Other - show two teams
	(controller $Instance renderer='HeaderShipListTwoTeams'
		(args allyCollection="allyCollection" enemyCollection="enemyCollection" 
				allyItemsWidth = "allyItemsWidth" allyLeftPadding = "allyLeftPadding" 
				enemyItemsWidth="enemyItemsWidth" enemyRightPadding="enemyRightPadding")
		(bind enabled "gameModeId != GameMode.PVE")
	)
)

(def element HeaderShipListAllyOnly(allyCollection:gfx, allyItemsWidth:number) layout=true
	(style
		(width = "allyItemsWidth")
		(height = "HeaderShip_ContainerHeight")
		(flow = "Flow.HORIZONTAL")
	)
	(controller $Repeat renderer='BattleShipListRenderer' 
		(count = "allyCollection.items.length")
		(args collection = "allyCollection" isAlly = true) 
	)
)

(def element HeaderShipListTwoTeams(allyCollection:gfx, enemyCollection:gfx, allyItemsWidth:number, allyLeftPadding:number, enemyItemsWidth:number, enemyRightPadding:number) layout=true
	(style
		(height = "HeaderShip_ContainerHeight")
		(flow = "Flow.HORIZONTAL")
	)

	(block
		(style
			(width = "allyLeftPadding")
			(height = "HeaderShip_ContainerHeight")
		)
	)
	(hblock
		(style
			(width = "allyItemsWidth")
			(height = "HeaderShip_ContainerHeight")
		)
		(controller $Repeat renderer='BattleShipListRenderer' 
			(count = "allyCollection.items.length")
			(args collection = "allyCollection" isAlly = true) 
		)
	)
	(block
		(style
			(width = "HEADER_TEAMS_DISTANCE")
			(height = "HeaderShip_ContainerHeight")
		)
	)
	(hblock
		(style
			(width = "enemyItemsWidth + enemyRightPadding")
			(height = "HeaderShip_ContainerHeight")
		)
		(controller $Repeat renderer='BattleShipListRenderer' 
			(count = "enemyCollection.items.length")
			(args collection = "enemyCollection" isAlly = false) 
		)
	)
)

(def element BattleShipListRenderer(collection:gfx, isAlly:bool) layout=true
	(scope
		# To support correct transitions, we take sorted collection once and update it later through animation.
		(var entity:gfx = "collection.items[$index]" watch=false)
		(macro VAR_RELATION "entity")
		(var avatarComponent:gfx = "entity.avatar")
		
		# entity icon
		(var subType:str = "avatarComponent.ship.ref.ship.subtype")
		(var shipType:str = "toLower(subType)")
		(var isSelf:bool = "entity.relation.value == 0" (event "entity.relation.evChanged"))
		(var isAlive:bool = "entity.health.isAlive" (event "entity.health.evKilled"))
		(var tkStatus:bool = "avatarComponent.tkStatus && isAlly" (event "avatarComponent.evTeamkillStatusChanged"))
		(var ttkStatus:bool = "avatarComponent.ttkStatus" (event "avatarComponent.evTTKStatusChanged"))
		(var isInSameDivision:bool = "avatarComponent.isInSameDivision" (event "avatarComponent.evDivisionChanged"))
		(var isDeadEnemy:bool = "!isAlly && !isAlive")
		(var entityIcon:str = 
			"isAlive 
				? isSelf
					? 'own_' + shipType + '_small'
					: isAlly
						? ttkStatus 
							? 'henkey_ally_' + shipType
							: isInSameDivision
								? 'division_' + shipType + '_small'
								: tkStatus 
									? 'ally_' + shipType + '_teamkiller_small' 
									: 'ally_' + shipType + '_small'
						: ttkStatus 
							? 'henkey_enemy_' + shipType
							: 'enemy_' + shipType + '_small'
				: isAlly
					? 'ally_' + shipType + '_sunk_small'
					: 'enemy_' + shipType + '_sunk_small'")

		# targets
		#TODO HACK entity should not have such global evAdded/evRemoved events
		#TODO HACK expression "entity.component" does not listen for "entity" changes, so using "entity ? entity.component : null" to force parser create watcher for entity
		#TODO HACK (event "component.ev") can not rebind if "component" is changed, so using bindcall to force that behavior
		(var targetComponent:gfx = "entity.hasComponent(CC.target) ? entity.target : null" (event "entity.evAdded") (event "entity.evRemoved") )
		(var targetFlags:number = "targetComponent ? targetComponent.flags : 0" (event "targetComponent.evFlagsChanged") (bindcall event "targetComponent.evFlagsChanged"))
		(var isTargetLocked:bool = "(targetFlags & (1 << WeaponType.ARTILLERY | 1 << WeaponType.TORPEDO)) > 0")
		(var isTargetLockedATBA:bool = "(targetFlags & (1 << WeaponType.ATBA)) > 0")

		(var avatarAnimation:gfx = "entity.avatarAnimation")
		#(var toIndex:number = "avatarAnimation.toIndex" (event "avatarAnimation.evPlayMoveAnimation")(event "avatarAnimation.evPlayDeathAnimation"))
		#(var fromIndex:number = "avatarAnimation.fromIndex" (event "avatarAnimation.evPlayMoveAnimation")(event "avatarAnimation.evPlayDeathAnimation"))
		#(var currentIndex:number = "avatarAnimation.currentIndex" (event "avatarAnimation.evForceSetIndexChange"))
	)

	(bind name "'HeaderIconShip_'+ (isAlly ? 'Ally_' : 'Enemy_') + $index")

	(style
		(position = "absolute")
		(left = "$index * HeaderShip_ItemWidth")
		#(bind left "avatarAnimation.currentIndex * HeaderShip_ItemWidth" watch=false init=false (event "avatarAnimation.evForceSetIndexChange"))
	)
	
#	(macro trace "entity.id")
#	(macro trace "currentIndex")
#	(macro trace "$index")
	
	
	(controller $Animation
		(bindcall play
			duration = "HeaderShip_ItemDuration"
			delay = "HeaderShip_ItemDelay"
			from="{left:avatarAnimation.fromIndex * HeaderShip_ItemWidth}"
			to="{left:avatarAnimation.toIndex * HeaderShip_ItemWidth}"
			watch=false
			killAll=true
			(event "avatarAnimation.evPlayMoveAnimation")
		)

		(bindcall play
			duration = "HeaderShip_ItemDuration"
			delay = "HeaderShip_ItemDelay"
			from="{left:avatarAnimation.fromIndex * HeaderShip_ItemWidth}"
			to="{left:avatarAnimation.toIndex * HeaderShip_ItemWidth}"
			watch=false
			killAll=true
			(event "avatarAnimation.evPlayDeathAnimation")
		)
	)

	(block
		(style
			(bind backgroundImage "'bitmap:' + entityIcon")
		)

		(controller $Animation
			(bindcall play
				duration = "HeaderShip_ItemDuration"
				from={alpha:1, scaleX:1, scaleY:1}
				to={alpha:0, scaleY:0.1, scaleX:0.1}
				watch=false
				(event "avatarAnimation.evPlayStartDeathAnimation")
			)
			(bindcall play
				duration = "HeaderShip_ItemDuration"
				delay = "HeaderShip_ItemDoubleDelay"
				from={alpha:0, scaleY:0.1, scaleX:0.1}
				to={alpha:1, scaleY:1, scaleX: 1}
				watch=false
				(event "avatarAnimation.evPlayEndDeathAnimation")
			)
		)
		
		(pivotX = "HEADER_SHIP_ICON.WIDTH/2")
		(pivotY = "HEADER_SHIP_ICON.HEIGHT/2")
	)

	(hblock
		(style
			(paddingTop = 5) 
			(align = "center|middle")
			(width = "HEADER_SHIP_ICON.WIDTH")
		)
		(block
			(bind visible "isTargetLocked")
			(style
				(backgroundImage = "'bitmap:aww_priority_attack_small'")
				(width = 15)
				(height = 15)
			)
		)
		(block
			(bind visible "isTargetLockedATBA")
			(style
				(backgroundImage = "'bitmap:scaliber_priority_attack_small'")
				(width = 16)
				(height = 16)
			)
		)
	)
)
